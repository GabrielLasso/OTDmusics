/* Generated by the Nim Compiler v0.20.2 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI108832 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI111647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI247386 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI170587 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI189211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI55083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI55084 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI169761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI169757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI169137 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI169713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI169701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI169714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI169705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI42205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI42565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI42563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI42561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI42231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI189207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI189209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI42283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI247397 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI247404 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI245022 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI245017 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI245609 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI245020 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI245015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI246415 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4054 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI208039 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI213202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI4030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4052 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4060 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI21156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4114 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI4108 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI4026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI4050 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4050.node = NNI4050;
var NNI4028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4028.node = NNI4028;
NTI4108.base = NTI4026;
NTI4114.base = NTI4026;
var NNI4026 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI4108, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI4114, name: "up", sons: null}]};
NTI4026.node = NNI4026;
var NNI4008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4008.node = NNI4008;
NTI4026.base = NTI4008;
NTI4028.base = NTI4026;
NTI4050.base = NTI4028;
var NNI21156 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI21156.node = NNI21156;
var NNI4060 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4060.node = NNI4060;
NTI4060.base = NTI4028;
var NNI4046 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4046.node = NNI4046;
var NNI4042 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4042.node = NNI4042;
NTI4042.base = NTI4028;
NTI4046.base = NTI4042;
var NNI4062 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4062.node = NNI4062;
NTI4062.base = NTI4028;
var NNI4044 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4044.node = NNI4044;
NTI4044.base = NTI4042;
var NNI4058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4058.node = NNI4058;
NTI4058.base = NTI4028;
var NNI4052 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4052.node = NNI4052;
var NNI4030 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4030.node = NNI4030;
NTI4030.base = NTI4026;
NTI4052.base = NTI4030;
var NNI213202 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI213202, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI213202, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI213202, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI213202, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI213202, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI213202, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI213202, name: "JArray", len: 0, sons: null}}};
NTI213202.node = NNI213202;
var NNI208039 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI208039.node = NNI208039;
NTI208039.base = NTI4052;
var NNI4054 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4054.node = NNI4054;
NTI4054.base = NTI4052;
NTI246415.base = NTI138;
NTI245020.base = NTI138;
var NNI245015 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI138, name: "id", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI138, name: "title", sons: null}, 
{kind: 1, offset: "tags", len: 0, typ: NTI245020, name: "tags", sons: null}]};
NTI245015.node = NNI245015;
NTI245609.base = NTI245015;
NTI245022.base = NTI245015;
var NNI245017 = {kind: 1, offset: "videos", len: 0, typ: NTI245022, name: "videos", sons: null};
NTI245017.node = NNI245017;
NTI247404.base = NTI245015;
NTI247397.base = NTI245015;
var NNI42283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI42283.node = NNI42283;
NTI42283.base = NTI4008;
var NNI189207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI189207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI189207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI189207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI189207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI189207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI189207, name: "pkSame", len: 0, sons: null}}};
NTI189207.node = NNI189207;
NTI42561.base = NTI42229;
NTI42563.base = NTI42229;
NTI42565.base = NTI42229;
var NNI42227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI42227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI42227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI42227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI42227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI42227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI42227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI42227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI42227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI42227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI42227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI42227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI42227, name: "NotationNode", len: 0, sons: null}}};
NTI42227.node = NNI42227;
NTI42281.base = NTI42283;
var NNI42231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI42561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI42563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI42565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI42229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI42229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI42229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI42227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI42229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI42229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI42281, name: "style", sons: null}]};
NTI42231.node = NNI42231;
var NNI42205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI42372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI42376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI42380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI42384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI42388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI42392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI42396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI42400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI42404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI42408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI42412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI42416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI42420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI42424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI42428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI42432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI42436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI42440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI42444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI42448, name: "onunload", sons: null}]};
NTI42205.node = NNI42205;
NTI42205.base = NTI4008;
NTI42231.base = NTI42205;
NTI42229.base = NTI42231;
var NNI169015 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI169015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI169015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI169015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI169015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI169015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI169015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI169015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI169015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI169015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI169015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI169015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI169015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI169015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI169015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI169015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI169015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI169015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI169015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI169015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI169015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI169015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI169015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI169015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI169015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI169015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI169015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI169015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI169015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI169015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI169015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI169015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI169015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI169015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI169015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI169015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI169015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI169015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI169015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI169015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI169015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI169015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI169015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI169015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI169015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI169015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI169015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI169015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI169015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI169015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI169015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI169015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI169015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI169015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI169015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI169015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI169015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI169015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI169015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI169015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI169015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI169015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI169015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI169015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI169015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI169015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI169015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI169015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI169015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI169015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI169015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI169015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI169015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI169015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI169015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI169015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI169015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI169015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI169015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI169015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI169015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI169015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI169015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI169015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI169015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI169015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI169015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI169015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI169015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI169015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI169015, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI169015, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI169015, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI169015, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI169015, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI169015, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI169015, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI169015, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI169015, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI169015, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI169015, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI169015, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI169015, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI169015, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI169015, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI169015, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI169015, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI169015, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI169015, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI169015, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI169015, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI169015, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI169015, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI169015, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI169015, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI169015, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI169015, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI169015, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI169015, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI169015, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI169015, name: "menu", len: 0, sons: null}}};
NTI169015.node = NNI169015;
NTI169720.base = NTI169705;
NTI169722.base = NTI140;
var NNI169137 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI169137, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI169137, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI169137, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI169137, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI169137, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI169137, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI169137, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI169137, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI169137, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI169137, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI169137, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI169137, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI169137, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI169137, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI169137, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI169137, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI169137, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI169137, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI169137, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI169137, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI169137, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI169137, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI169137, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI169137, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI169137, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI169137, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI169137, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI169137, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI169137, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI169137, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI169137, name: "onkeyuplater", len: 0, sons: null}}};
NTI169137.node = NNI169137;
var NNI169713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI169137, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI169757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI169761, name: "Field2", sons: null}]};
NTI169713.node = NNI169713;
NTI169701.base = NTI169713;
var NNI55083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55083.node = NNI55083;
NTI55084.base = NTI55083;
var NNI169714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI169015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI140, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI140, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI169720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI169722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI169701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI55084, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI42229, name: "dom", sons: null}]};
NTI169714.node = NNI169714;
NTI169714.base = NTI4008;
NTI169705.base = NTI169714;
var NNI189209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI189207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI42229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI42229, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI169705, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI169705, name: "oldNode", sons: null}]};
NTI189209.node = NNI189209;
var NNI189211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI169705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI169705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI189211.node = NNI189211;
NTI170587.base = NTI140;
NTI247386.base = NTI245015;
var NNI111647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI108832, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI111647.node = NNI111647;

function cstrToNimstr(c_23271) {
		  var ln = c_23271.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23271.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23271.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_23288) {
		  if (s_23288 === null) return "";
  var len = s_23288.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_23288[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_23288[i] < 128)
      asciiPart[i] = fcc(s_23288[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24427, src_24428, ti_24429) {
	var result_24619 = null;

		switch (ti_24429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24401(ti_24429))) {
			result_24619 = src_24428;
			}
			else {
				result_24619 = [src_24428[0], src_24428[1]];
			}
			
			break;
		case 19:
			      if (dest_24427 === null || dest_24427 === undefined) {
        dest_24427 = {};
      }
      else {
        for (var key in dest_24427) { delete dest_24427[key]; }
      }
      for (var key in src_24428) { dest_24427[key] = src_24428[key]; }
      result_24619 = dest_24427;
    
			break;
		case 18:
		case 17:
			if (!((ti_24429.base == null))) {
			result_24619 = nimCopy(dest_24427, src_24428, ti_24429.base);
			}
			else {
			if ((ti_24429.kind == 17)) {
			result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {m_type: ti_24429} : dest_24427;
			}
			else {
				result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {} : dest_24427;
			}
			}
			nimCopyAux(result_24619, src_24428, ti_24429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24428 === null) {
        result_24619 = null;
      }
      else {
        if (dest_24427 === null || dest_24427 === undefined) {
          dest_24427 = new Array(src_24428.length);
        }
        else {
          dest_24427.length = src_24428.length;
        }
        result_24619 = dest_24427;
        for (var i = 0; i < src_24428.length; ++i) {
          result_24619[i] = nimCopy(result_24619[i], src_24428[i], ti_24429.base);
        }
      }
    
			break;
		case 28:
			      if (src_24428 !== null) {
        result_24619 = src_24428.slice(0);
      }
    
			break;
		default: 
			result_24619 = src_24428;
			break;
		}

	return result_24619;

}

function makeNimstrLit(c_23254) {
		  var ln = c_23254.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23254.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_24686, value_24687, typ_24688) {
		    var result = new Array(len_24686);
    for (var i = 0; i < len_24686; ++i) result[i] = nimCopy(null, value_24687, typ_24688);
    return result;
  

	
}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		e_21618.trace = nimCopy(null, raw_write_stack_trace_21468(), NTI138);
		throw e_21618;

	
}
var ConstSet2 = setConstr(6);

function raiseFieldError(f_23039) {
		var e_23042 = null;
		e_23042 = {m_type: NTI4060, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_23042.message = nimCopy(null, (f_23039 || []).concat(makeNimstrLit(" is not accessible") || []), NTI138);
		e_23042.parent = null;
		raiseException(e_23042, "FieldError");

	
}

function addInt(a_23603, b_23604) {
		    var result = a_23603 + b_23604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckRange(i_24724, a_24725, b_24726) {
			var Tmp1;

	var result_24727 = 0;

	BeforeRet: do {
			if (!(a_24725 <= i_24724)) Tmp1 = false; else {				Tmp1 = (i_24724 <= b_24726);			}		if (Tmp1) {
		result_24727 = i_24724;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_24727;

}

function divInt(a_23657, b_23658) {
		    if (b_23658 == 0) raiseDivByZero();
    if (b_23658 == -1 && a_23657 == 2147483647) raiseOverflow();
    return Math.trunc(a_23657 / b_23658);
  

	
}

function subInt(a_23621, b_23622) {
		    var result = a_23621 - b_23622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_24705, a_24706, b_24707) {
			var Tmp1;

	var result_24708 = 0;

	BeforeRet: do {
			if (!(a_24706 <= i_24705)) Tmp1 = false; else {				Tmp1 = (i_24705 <= b_24707);			}		if (Tmp1) {
		result_24708 = i_24705;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_24705, a_24706, b_24707);
		}
		
	} while (false);

	return result_24708;

}

function eqStrings(a_23483, b_23484) {
		    if (a_23483 == b_23484) return true;
    if (a_23483 === null && b_23484.length == 0) return true;
    if (b_23484 === null && a_23483.length == 0) return true;
    if ((!a_23483) || (!b_23484)) return false;
    var alen = a_23483.length;
    if (alen != b_23484.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_23483[i] != b_23484[i]) return false;
    return true;
  

	
}

function mulInt(a_23639, b_23640) {
		    var result = a_23639 * b_23640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet3 = setConstr(5);
var ConstSet4 = setConstr(5);

function mnewString(len_23305) {
		    return new Array(len_23305);
  

	
}

function addChar(x_24895, c_24896) {
		x_24895.push(c_24896);

	
}
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr(0, 125);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_24021, b_24022) {
		var Tmp1;

	var result_24023 = 0;

	BeforeRet: do {
		if ((b_24022 <= a_24021)) {
		Tmp1 = a_24021;
		}
		else {
		Tmp1 = b_24022;
		}
		
		result_24023 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24023;

}

function nimMin(a_24003, b_24004) {
		var Tmp1;

	var result_24005 = 0;

	BeforeRet: do {
		if ((a_24003 <= b_24004)) {
		Tmp1 = a_24003;
		}
		else {
		Tmp1 = b_24004;
		}
		
		result_24005 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24005;

}
var ConstSet9 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function reprEnum(e_25480, typ_25481) {
	var result_25482 = null;

	var F={procname:"system.reprEnum",prev:framePtr,filename:"reprjs.nim",line:0};
	framePtr = F;
		if (!(is_undefined_25483(typ_25481.node.sons[e_25480]))) {
		F.line = 38;
		result_25482 = nimCopy(null, makeNimstrLit(typ_25481.node.sons[e_25480].name), NTI138);
		}
		else {
			F.line = 40;
			result_25482 = nimCopy(null, (cstrToNimstr((e_25480)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI138);
		}
		
	framePtr = F.prev;

	return result_25482;

}
var ConstSet10 = setConstr(5);
var ConstSet11 = setConstr(6);
var ConstSet12 = setConstr(5);
var ConstSet13 = setConstr(6);
var ConstSet14 = setConstr(6);
var ConstSet15 = setConstr(5);
var ConstSet16 = setConstr(5);
var ConstSet17 = setConstr(6);
var ConstSet18 = setConstr(5);
var ConstSet19 = setConstr(4, 0);
var ConstSet20 = setConstr(4, 0);
var ConstSet21 = setConstr(4);
var ConstSet22 = setConstr(4, 0);
var ConstSet23 = setConstr(4, 0);
var ConstSet24 = setConstr(4);
var ConstSet25 = setConstr(6);
var ConstSet26 = setConstr(6);
var ConstSet27 = setConstr(4, 0);
var ConstSet28 = setConstr(4, 0);
var ConstSet29 = setConstr(4);
				var to_lower_ranges_85292 = [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534];
				var to_lower_singlets_86562 = [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884];
			var to_tag_169689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
			var to_event_name_169695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}
var ConstSet30 = setConstr(60, 62, 94);
var ConstSet31 = setConstr(60, 62, 94);
var ConstSet32 = setConstr(45, 43, 32);
var ConstSet33 = setConstr([48, 57]);
var ConstSet34 = setConstr([48, 57]);
var ConstSet35 = setConstr([48, 57]);
var ConstSet36 = setConstr([65, 90], [97, 122]);
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_170495 = [0];
var object_id_174437 = [0];
var vcomponents_182026 = [{}];
var kxi_189326 = [null];
var lc_240233 = [{}];

function is_fat_pointer_24401(ti_24403) {
	var result_24404 = false;

	BeforeRet: do {
		result_24404 = !((ConstSet1[ti_24403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24404;

}

function nimCopyAux(dest_24432, src_24433, n_24435) {
		switch (n_24435.kind) {
		case 0:
			break;
		case 1:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24435.sons.length; i++) {
      nimCopyAux(dest_24432, src_24433, n_24435.sons[i]);
    }
    
			break;
		case 3:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
      for (var i = 0; i < n_24435.sons.length; ++i) {
        nimCopyAux(dest_24432, src_24433, n_24435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_21151(f_21153) {
					var Tmp3;

	var result_21154 = [null];

		var it_21162 = f_21153;
		var i_21164 = 0;
		var total_21166 = 0;
		var temp_frames_21173 = arrayConstr(64, {Field0: null, Field1: 0}, NTI21156);
		L1: do {
				L2: while (true) {
					if (!!((it_21162 == null))) Tmp3 = false; else {						Tmp3 = (i_21164 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_21173[i_21164].Field0 = it_21162.procname;
					temp_frames_21173[i_21164].Field1 = it_21162.line;
					i_21164 += 1;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_21162 == null))) break L5;
					total_21166 += 1;
					it_21162 = it_21162.prev;
				}
		} while(false);
		result_21154[0] = nimCopy(null, [], NTI138);
		if (!((total_21166 == i_21164))) {
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("(")); } else { result_21154[0] = makeNimstrLit("("); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr(((total_21166 - i_21164))+"")); } else { result_21154[0] = cstrToNimstr(((total_21166 - i_21164))+"").slice(); };
		if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_21154[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_21421 = 0;
			var colontmp__246930 = 0;
			colontmp__246930 = (i_21164 - 1);
			var res_246931 = colontmp__246930;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_246931)) break L8;
						j_21421 = res_246931;
						add_18638(result_21154, 0, temp_frames_21173[j_21421].Field0);
						if ((0 < temp_frames_21173[j_21421].Field1)) {
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit(", line: ")); } else { result_21154[0] = makeNimstrLit(", line: "); };
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(cstrToNimstr((temp_frames_21173[j_21421].Field1)+"")); } else { result_21154[0] = cstrToNimstr((temp_frames_21173[j_21421].Field1)+"").slice(); };
						}
						
						if (result_21154[0] != null) { result_21154[0] = (result_21154[0]).concat(makeNimstrLit("\x0A")); } else { result_21154[0] = makeNimstrLit("\x0A"); };
						res_246931 -= 1;
					}
			} while(false);
		} while(false);

	return result_21154[0];

}

function raw_write_stack_trace_21468() {
	var result_21470 = null;

		if (!((framePtr == null))) {
		result_21470 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_21151(framePtr) || []), NTI138);
		}
		else {
			result_21470 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_21470;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(raw_write_stack_trace_21468()); } else { buf_21530[0] = raw_write_stack_trace_21468().slice(); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function sys_fatal_14862(message_14866) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
	framePtr = F;
		F.line = 34;
		var e_15003 = null;
		F.line = 37;
		e_15003 = {m_type: NTI4050, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 38;
		e_15003.message = nimCopy(null, message_14866, NTI138);
		F.line = 39;
		raiseException(e_15003, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_14858(msg_14860) {
	var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 20;
		sys_fatal_14862(msg_14860);
	framePtr = F.prev;

	
}

function failed_assert_impl_15051(msg_15053) {
	var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
	framePtr = F;
		F.line = 27;
		raise_assert_14858(msg_15053);
	framePtr = F.prev;

	
}

function get_var_type_231509(x_231511) {
	var result_231512 = 0;

	var F={procname:"json.getVarType",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 871;
		result_231512 = 0;
		F.line = 874;
		switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_231511)))) {
		case "[object Array]":
			F.line = 875;
			result_231512 = 6;
			break BeforeRet;
			break;
		case "[object Object]":
			F.line = 876;
			result_231512 = 5;
			break BeforeRet;
			break;
		case "[object Number]":
			if ((x_231511 % 1.0000000000000000e+00 == 0.0)) {
			F.line = 879;
			result_231512 = 2;
			break BeforeRet;
			}
			else {
				F.line = 881;
				result_231512 = 3;
				break BeforeRet;
			}
			
			break;
		case "[object Boolean]":
			F.line = 882;
			result_231512 = 1;
			break BeforeRet;
			break;
		case "[object Null]":
			F.line = 883;
			result_231512 = 0;
			break BeforeRet;
			break;
		case "[object String]":
			F.line = 884;
			result_231512 = 4;
			break BeforeRet;
			break;
		default: 
			if (true) {
			F.line = 885;
			failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(885, 18) `false` "));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_231512;

}

function new_jarray_213642() {
	var result_213644 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 219;
		result_213644 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};
	framePtr = F.prev;

	return result_213644;

}

function len_231629(x_231631) {
	var result_231632 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_231509(x_231631) == 6))) {
		F.line = 888;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(888, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 889;
		      result_231632 = x_231631.length;
    
	framePtr = F.prev;

	return result_231632;

}

function add_213976(father_213978, child_213979) {
		var Tmp1;
		var Tmp2;

	var F={procname:"json.add",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((father_213978.kind == 6))) {
		F.line = 289;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(289, 10) `father.kind == JArray` "));
		}
		
		F.line = 290;
		var Tmp1 = father_213978;
		if (ConstSet2[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_213979); } else { Tmp2 = [child_213979]; };
	framePtr = F.prev;

	
}

function HEX5BHEX5D_232014(x_232016, y_232017) {
	var result_232018 = {};

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((get_var_type_231509(x_232016) == 6))) {
		F.line = 900;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(900, 12) `x.getVarType == JArray` "));
		}
		
		F.line = 901;
		      result_232018 = x_232016[y_232017];
    
	framePtr = F.prev;

	return result_232018;

}

function raiseOverflow() {
		var e_22042 = null;
		e_22042 = {m_type: NTI4046, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22042.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_22042.parent = null;
		raiseException(e_22042, "OverflowError");

	
}

function is_power_of_two_68862(x_68864) {
		var Tmp1;

	var result_68865 = false;

	BeforeRet: do {
		if (!(0 < x_68864)) Tmp1 = false; else {			Tmp1 = ((x_68864 & (x_68864 - 1)) == 0);		}		result_68865 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_68865;

}

function raiseRangeError() {
		var e_22441 = null;
		e_22441 = {m_type: NTI4062, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22441.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_22441.parent = null;
		raiseException(e_22441, "RangeError");

	
}

function init_ordered_table_213383(initial_size_213387) {
	var result_213389 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_68862(initial_size_213387))) {
		F.line = 118;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		F.line = 119;
		result_213389.counter = 0;
		F.line = 120;
		result_213389.data = new Array(chckRange(initial_size_213387, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_213387, 0, 2147483647);++i) {result_213389.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		result_213389.first = -1;
		F.line = 123;
		result_213389.last = -1;
	framePtr = F.prev;

	return result_213389;

}

function new_jobject_213378() {
	var result_213380 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 215;
		result_213380 = {kind: 5, fields: init_ordered_table_213383(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};
	framePtr = F.prev;

	return result_213380;

}

function raiseDivByZero() {
		var e_22241 = null;
		e_22241 = {m_type: NTI4044, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22241.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		e_22241.parent = null;
		raiseException(e_22241, "DivByZeroError");

	
}

function raiseIndexError(i_22639, a_22640, b_22641) {
		var Tmp1;

		var e_22802 = null;
		e_22802 = {m_type: NTI4058, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22641 < a_22640)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22639)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22640)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22641)+"") || []);
		}
		
		e_22802.message = nimCopy(null, Tmp1, NTI138);
		e_22802.parent = null;
		raiseException(e_22802, "IndexError");

	
}

function HEX21HEX26_174272(h_174274, val_174275) {
	var result_174276 = 0;

	var F={procname:"hashes.!&",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 63;
		var h_174277 = (h_174274 >>> 0);
		F.line = 64;
		var val_174278 = (val_174275 >>> 0);
		F.line = 65;
		var res_174284 = ((h_174277 + val_174278) >>> 0);
		F.line = 66;
		res_174284 = ((res_174284 + (res_174284 << 10)) >>> 0);
		F.line = 67;
		res_174284 = (res_174284 ^ ((res_174284 >>> 0) >>> 6));
		F.line = 68;
		result_174276 = (res_174284|0);
	framePtr = F.prev;

	return result_174276;

}

function hash_175069(x_175071) {
	var result_175072 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 141;
		result_175072 = x_175071;
	framePtr = F.prev;

	return result_175072;

}

function HEX21HEX24_174322(h_174324) {
	var result_174325 = 0;

	var F={procname:"hashes.!$",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 74;
		var h_174326 = (h_174324 >>> 0);
		F.line = 75;
		var res_174339 = ((h_174326 + (h_174326 << 3)) >>> 0);
		F.line = 76;
		res_174339 = (res_174339 ^ ((res_174339 >>> 0) >>> 11));
		F.line = 77;
		res_174339 = ((res_174339 + (res_174339 << 15)) >>> 0);
		F.line = 78;
		result_174325 = (res_174339|0);
	framePtr = F.prev;

	return result_174325;

}

function hash_175180(x_175182) {
	var result_175183 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"hashes.nim",line:0};
	framePtr = F;
		F.line = 165;
		var element_size_175185 = 1;
		F.line = 166;
		var step_size_175186 = divInt(4, element_size_175185);
		F.line = 167;
		var i_175187 = 0;
		L1: do {
			F.line = 168;
				L2: while (true) {
				if (!(i_175187 <= subInt(addInt((x_175182 != null ? (x_175182.length-1) : -1), 1), step_size_175186))) break L2;
					F.line = 169;
					var n_175188 = 0;
					F.line = 175;
					n_175188 = x_175182[chckIndx(i_175187, 0, x_175182.length+0-1)-0];
					F.line = 176;
					result_175183 = HEX21HEX26_174272(result_175183, n_175188);
					F.line = 177;
					i_175187 = addInt(i_175187, step_size_175186);
				}
		} while(false);
		L3: do {
			F.line = 159;
			var i_175407 = 0;
			F.line = 2679;
			var colontmp__187366 = 0;
			F.line = 189;
			colontmp__187366 = (x_175182 != null ? (x_175182.length-1) : -1);
			F.line = 2689;
			var res_187367 = i_175187;
			L4: do {
				F.line = 2690;
					L5: while (true) {
					if (!(res_187367 <= colontmp__187366)) break L5;
						F.line = 159;
						i_175407 = res_187367;
						F.line = 160;
						result_175183 = HEX21HEX26_174272(result_175183, hash_175069(x_175182[chckIndx(i_175407, 0, x_175182.length+0-1)-0]));
						F.line = 2692;
						res_187367 = addInt(res_187367, 1);
					}
			} while(false);
		} while(false);
		F.line = 161;
		result_175183 = HEX21HEX24_174322(result_175183);
	framePtr = F.prev;

	return result_175183;

}

function is_filled_178418(hcode_178420) {
	var result_178421 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_178421 = !((hcode_178420 == 0));
	framePtr = F.prev;

	return result_178421;

}

function next_try_178435(h_178437, max_hash_178438) {
	var result_178439 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		F.line = 30;
		result_178439 = (addInt(h_178437, 1) & max_hash_178438);
	framePtr = F.prev;

	return result_178439;

}

function raw_get_214821(t_214826, key_214827, hc_214828, hc_214828_Idx) {
						var Tmp3;

	var result_214829 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_214828[hc_214828_Idx] = hash_175180(key_214827);
		if ((hc_214828[hc_214828_Idx] == 0)) {
		F.line = 56;
		hc_214828[hc_214828_Idx] = 314159265;
		}
		
		if (((t_214826.data != null ? t_214826.data.length : 0) == 0)) {
		F.line = 38;
		result_214829 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_214971 = (hc_214828[hc_214828_Idx] & (t_214826.data != null ? (t_214826.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_214826.data[chckIndx(h_214971, 0, t_214826.data.length+0-1)-0].Field0)) break L2;
						if (!(t_214826.data[chckIndx(h_214971, 0, t_214826.data.length+0-1)-0].Field0 == hc_214828[hc_214828_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_214826.data[chckIndx(h_214971, 0, t_214826.data.length+0-1)-0].Field2, key_214827);						}					if (Tmp3) {
					F.line = 46;
					result_214829 = h_214971;
					break BeforeRet;
					}
					
					F.line = 47;
					h_214971 = next_try_178435(h_214971, (t_214826.data != null ? (t_214826.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_214829 = subInt(-1, h_214971);
	} while (false);
	framePtr = F.prev;

	return result_214829;

}

function must_rehash_178453(length_178455, counter_178456) {
	var result_178457 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
		if (!((counter_178456 < length_178455))) {
		F.line = 33;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/hashcommon.nim(33, 9) `length > counter` "));
		}
		
		F.line = 34;
		result_178457 = ((mulInt(length_178455, 2) < mulInt(counter_178456, 3)) || (subInt(length_178455, counter_178456) < 4));
	framePtr = F.prev;

	return result_178457;

}

function raw_insert_217265(t_217271, data_217274, data_217274_Idx, key_217275, val_217276, hc_217277, h_217278) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 22;
		data_217274[data_217274_Idx][chckIndx(h_217278, 0, data_217274[data_217274_Idx].length+0-1)-0].Field2 = nimCopy(null, key_217275, NTI138);
		F.line = 23;
		data_217274[data_217274_Idx][chckIndx(h_217278, 0, data_217274[data_217274_Idx].length+0-1)-0].Field3 = val_217276;
		F.line = 24;
		data_217274[data_217274_Idx][chckIndx(h_217278, 0, data_217274[data_217274_Idx].length+0-1)-0].Field0 = hc_217277;
		F.line = 1233;
		data_217274[data_217274_Idx][chckIndx(h_217278, 0, data_217274[data_217274_Idx].length+0-1)-0].Field1 = -1;
		if ((t_217271.first < 0)) {
		F.line = 1234;
		t_217271.first = h_217278;
		}
		
		if ((0 <= t_217271.last)) {
		F.line = 1235;
		data_217274[data_217274_Idx][chckIndx(t_217271.last, 0, data_217274[data_217274_Idx].length+0-1)-0].Field1 = h_217278;
		}
		
		F.line = 1236;
		t_217271.last = h_217278;
	framePtr = F.prev;

	
}

function enlarge_216167(t_216173) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1239;
		var n_216181 = null;
		F.line = 1240;
		n_216181 = new Array(chckRange(mulInt((t_216173.data != null ? t_216173.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_216173.data != null ? t_216173.data.length : 0), 2), 0, 2147483647);++i) {n_216181[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 1241;
		var h_216320 = t_216173.first;
		F.line = 1242;
		t_216173.first = -1;
		F.line = 1243;
		t_216173.last = -1;
		F.line = 1244;
		var Tmp1 = t_216173.data; t_216173.data = n_216181; n_216181 = Tmp1;		L2: do {
			F.line = 1245;
				L3: while (true) {
				if (!(0 <= h_216320)) break L3;
					F.line = 1246;
					var nxt_216479 = n_216181[chckIndx(h_216320, 0, n_216181.length+0-1)-0].Field1;
					F.line = 1247;
					var eh_216628 = n_216181[chckIndx(h_216320, 0, n_216181.length+0-1)-0].Field0;
					if (is_filled_178418(eh_216628)) {
					F.line = 1249;
					var j_216635 = (eh_216628 & (t_216173.data != null ? (t_216173.data.length-1) : -1));
					L4: do {
						F.line = 1250;
							L5: while (true) {
							if (!is_filled_178418(t_216173.data[chckIndx(j_216635, 0, t_216173.data.length+0-1)-0].Field0)) break L5;
								F.line = 1251;
								j_216635 = next_try_178435(j_216635, (t_216173.data != null ? (t_216173.data.length-1) : -1));
							}
					} while(false);
					F.line = 1252;
					raw_insert_217265(t_216173, t_216173, "data", n_216181[chckIndx(h_216320, 0, n_216181.length+0-1)-0].Field2, n_216181[chckIndx(h_216320, 0, n_216181.length+0-1)-0].Field3, n_216181[chckIndx(h_216320, 0, n_216181.length+0-1)-0].Field0, j_216635);
					}
					
					F.line = 1253;
					h_216320 = nxt_216479;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_218082(t_218087, key_218088, hc_218089) {
	var result_218090 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t_218087.data != null ? t_218087.data.length : 0) == 0)) {
		F.line = 38;
		result_218090 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_218229 = (hc_218089 & (t_218087.data != null ? (t_218087.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_218087.data[chckIndx(h_218229, 0, t_218087.data.length+0-1)-0].Field0)) break L2;
					if (((t_218087.data[chckIndx(h_218229, 0, t_218087.data.length+0-1)-0].Field0 == hc_218089) && eqStrings(t_218087.data[chckIndx(h_218229, 0, t_218087.data.length+0-1)-0].Field2, key_218088))) {
					F.line = 46;
					result_218090 = h_218229;
					break BeforeRet;
					}
					
					F.line = 47;
					h_218229 = next_try_178435(h_218229, (t_218087.data != null ? (t_218087.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_218090 = subInt(-1, h_218229);
	} while (false);
	framePtr = F.prev;

	return result_218090;

}

function HEX5BHEX5DHEX3D_214311(t_214317, key_214318, val_214319) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		if (((t_214317.data != null ? t_214317.data.length : 0) == 0)) {
		if (!(is_power_of_two_68862(64))) {
		F.line = 118;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		F.line = 119;
		t_214317.counter = 0;
		F.line = 120;
		t_214317.data = new Array(64); for (var i=0;i<64;++i) {t_214317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 122;
		t_214317.first = -1;
		F.line = 123;
		t_214317.last = -1;
		}
		
		F.line = 57;
		var hc_214801 = [0];
		F.line = 58;
		var index_215439 = raw_get_214821(t_214317, key_214318, hc_214801, 0);
		if ((0 <= index_215439)) {
		F.line = 59;
		t_214317.data[chckIndx(index_215439, 0, t_214317.data.length+0-1)-0].Field3 = val_214319;
		}
		else {
			if (((t_214317.data != null ? t_214317.data.length : 0) == 0)) {
			if (!(is_power_of_two_68862(64))) {
			F.line = 118;
			failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/collections/tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			F.line = 119;
			t_214317.counter = 0;
			F.line = 120;
			t_214317.data = new Array(64); for (var i=0;i<64;++i) {t_214317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			F.line = 122;
			t_214317.first = -1;
			F.line = 123;
			t_214317.last = -1;
			}
			
			if (must_rehash_178453((t_214317.data != null ? t_214317.data.length : 0), t_214317.counter)) {
			F.line = 49;
			enlarge_216167(t_214317);
			F.line = 50;
			index_215439 = raw_get_known_hc_218082(t_214317, key_214318, hc_214801[0]);
			}
			
			F.line = 51;
			index_215439 = subInt(-1, index_215439);
			F.line = 52;
			raw_insert_217265(t_214317, t_214317, "data", key_214318, val_214319, hc_214801[0], index_215439);
			F.line = 60;
			t_214317.counter = addInt(t_214317.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_219214(obj_219216, key_219217, val_219218) {
		var Tmp1;

	var F={procname:"json.[]=",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!((obj_219216.kind == 5))) {
		F.line = 363;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(363, 9) `obj.kind == JObject` "));
		}
		
		F.line = 364;
		var Tmp1 = obj_219216;
		if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		HEX5BHEX5DHEX3D_214311(Tmp1.fields, key_219217, val_219218);
	framePtr = F.prev;

	
}

function new_jint_213311(n_213313) {
	var result_213314 = null;

	var F={procname:"json.newJInt",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 199;
		result_213314 = {kind: 2, num: n_213313, str: null, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_213314;

}

function new_jfloat_213328(n_213330) {
	var result_213331 = null;

	var F={procname:"json.newJFloat",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_213331 = {kind: 3, fnum: n_213330, str: null, num: 0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_213331;

}

function new_jstring_213261(s_213263) {
	var result_213264 = null;

	var F={procname:"json.newJString",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 191;
		result_213264 = {kind: 4, str: nimCopy(null, s_213263, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_213264;

}

function new_jbool_213345(b_213347) {
	var result_213348 = null;

	var F={procname:"json.newJBool",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 207;
		result_213348 = {kind: 1, bval: b_213347, str: null, num: 0, fnum: 0.0, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_213348;

}

function new_jnull_213362() {
	var result_213364 = null;

	var F={procname:"json.newJNull",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 211;
		result_213364 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
	framePtr = F.prev;

	return result_213364;

}

function convert_object_232214(x_232216) {
	var result_232217 = null;

	var F={procname:"json.convertObject",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 906;
		switch (get_var_type_231509(x_232216)) {
		case 6:
			F.line = 908;
			result_232217 = new_jarray_213642();
			L1: do {
				F.line = 909;
				var i_232225 = 0;
				F.line = 2716;
				var colontmp__246916 = 0;
				F.line = 909;
				colontmp__246916 = len_231629(x_232216);
				F.line = 2717;
				var i_246917 = 0;
				L2: do {
					F.line = 2718;
						L3: while (true) {
						if (!(i_246917 < colontmp__246916)) break L3;
							F.line = 909;
							i_232225 = i_246917;
							F.line = 910;
							add_213976(result_232217, convert_object_232214(HEX5BHEX5D_232014(x_232216, i_232225)));
							F.line = 2720;
							i_246917 = addInt(i_246917, 1);
						}
				} while(false);
			} while(false);
			break;
		case 5:
			F.line = 912;
			result_232217 = new_jobject_213378();
			F.line = 913;
			for (var property in x_232216) {
        if (x_232216.hasOwnProperty(property)) {
      
			F.line = 916;
			var nim_property_232227 = null;
			F.line = 917;
			var nim_value_232228 = {};
			F.line = 918;
			nim_property_232227 = property; nim_value_232228 = x_232216[property];
			F.line = 919;
			HEX5BHEX5DHEX3D_219214(result_232217, cstrToNimstr(nim_property_232227), convert_object_232214(nim_value_232228));
			F.line = 920;
			}}
			break;
		case 2:
			F.line = 922;
			result_232217 = new_jint_213311(x_232216);
			break;
		case 3:
			F.line = 924;
			result_232217 = new_jfloat_213328(x_232216);
			break;
		case 4:
			F.line = 926;
			result_232217 = new_jstring_213261(cstrToNimstr(x_232216));
			break;
		case 1:
			F.line = 928;
			result_232217 = new_jbool_213345(x_232216);
			break;
		case 0:
			F.line = 930;
			result_232217 = new_jnull_213362();
			break;
		}
	framePtr = F.prev;

	return result_232217;

}

function parse_json_232257(buffer_232259) {
	var result_232260 = null;

	var F={procname:"json.parseJson",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 933;
		result_232260 = convert_object_232214(JSON.parse(toJSStr(buffer_232259)));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_232260;

}

function invalid_format_string_167339() {
	var F={procname:"strutils.invalidFormatString",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 3436;
		var e_167343 = null;
		F.line = 3439;
		e_167343 = {m_type: NTI4052, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2623;
		e_167343.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI138);
		F.line = 3432;
		e_167343.parent = null;
		F.line = 2623;
		raiseException(e_167343, "ValueError");
	framePtr = F.prev;

	
}

function nsuToLowerAsciiChar(c_158780) {
	var result_158781 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet8[c_158780] != undefined)) {
		F.line = 222;
		result_158781 = chckRange(addInt(c_158780, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_158781 = c_158780;
		}
		
	framePtr = F.prev;

	return result_158781;

}

function nsuCmpIgnoreStyle(a_159047, b_159048) {
					var Tmp7;
					var Tmp8;

	var result_159049 = 0;

	BeforeRet: do {
		var i_159051 = 0;
		var j_159053 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_159051 < (a_159047 != null ? a_159047.length : 0)) && (a_159047[i_159051] == 95))) break L4;
								i_159051 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_159053 < (b_159048 != null ? b_159048.length : 0)) && (b_159048[j_159053] == 95))) break L6;
								j_159053 += 1;
							}
					} while(false);
					if ((i_159051 < (a_159047 != null ? a_159047.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_159047[i_159051]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_159066 = Tmp7;
					if ((j_159053 < (b_159048 != null ? b_159048.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_159048[j_159053]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_159067 = Tmp8;
					result_159049 = (aa_159066 - bb_159067);
					if (!((result_159049 == 0))) {
					break BeforeRet;
					}
					
					if (((a_159047 != null ? a_159047.length : 0) <= i_159051)) {
					if (((b_159048 != null ? b_159048.length : 0) <= j_159053)) {
					result_159049 = 0;
					break BeforeRet;
					}
					
					result_159049 = -1;
					break BeforeRet;
					}
					else {
					if (((b_159048 != null ? b_159048.length : 0) <= j_159053)) {
					result_159049 = 1;
					break BeforeRet;
					}
					}
					i_159051 += 1;
					j_159053 += 1;
				}
		} while(false);
	} while (false);

	return result_159049;

}

function find_normalized_167306(x_167308, in_array_167310) {
	var result_167311 = 0;

	var F={procname:"strutils.findNormalized",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2615;
		var i_167313 = 0;
		L1: do {
			F.line = 2616;
				L2: while (true) {
				if (!(i_167313 < (in_array_167310 != null ? (in_array_167310.length-1) : -1))) break L2;
					if ((nsuCmpIgnoreStyle(x_167308, in_array_167310[chckIndx(i_167313, 0, in_array_167310.length+0-1)-0]) == 0)) {
					F.line = 2617;
					result_167311 = i_167313;
					break BeforeRet;
					}
					
					F.line = 2618;
					i_167313 = addInt(i_167313, 2);
				}
		} while(false);
		F.line = 2620;
		result_167311 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_167311;

}

function substr_29822(s_29824, first_29825, last_29826) {
	var result_29827 = null;

	var F={procname:"system.substr",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4474;
		var first_29828 = nimMax(first_29825, 0);
		F.line = 4475;
		var l_29830 = nimMax(addInt(subInt(nimMin(last_29826, (s_29824 != null ? (s_29824.length-1) : -1)), first_29828), 1), 0);
		F.line = 4476;
		result_29827 = nimCopy(null, mnewString(chckRange(l_29830, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 4477;
			var i_29839 = 0;
			F.line = 2679;
			var colontmp__169678 = 0;
			F.line = 4477;
			colontmp__169678 = subInt(l_29830, 1);
			F.line = 2689;
			var res_169679 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_169679 <= colontmp__169678)) break L3;
						F.line = 4477;
						i_29839 = res_169679;
						F.line = 4478;
						result_29827[chckIndx(i_29839, 0, result_29827.length+0-1)-0] = s_29824[chckIndx(addInt(i_29839, first_29828), 0, s_29824.length+0-1)-0];
						F.line = 2692;
						res_169679 = addInt(res_169679, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_29827;

}

function nsuAddf(s_167425, s_167425_Idx, formatstr_167426, a_167428) {
									var Tmp5;
						var Tmp6;
							var Tmp7;
						var Tmp10;
							var Tmp11;
								var Tmp12;
									var Tmp15;
							var Tmp16;

	var F={procname:"strutils.addf",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2629;
		var i_167432 = 0;
		F.line = 2630;
		var num_167434 = 0;
		L1: do {
			F.line = 2631;
				L2: while (true) {
				if (!(i_167432 < (formatstr_167426 != null ? formatstr_167426.length : 0))) break L2;
					if (((formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0] == 36) && (addInt(i_167432, 1) < (formatstr_167426 != null ? formatstr_167426.length : 0)))) {
					F.line = 2633;
					switch (formatstr_167426[chckIndx(addInt(i_167432, 1), 0, formatstr_167426.length+0-1)-0]) {
					case 35:
						if (((a_167428 != null ? (a_167428.length-1) : -1) < num_167434)) {
						F.line = 2635;
						invalid_format_string_167339();
						}
						
						F.line = 2636;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(num_167434, 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(num_167434, 0, a_167428.length+0-1)-0].slice(); };
						F.line = 2637;
						i_167432 = addInt(i_167432, 2);
						F.line = 2638;
						num_167434 = addInt(num_167434, 1);
						break;
					case 36:
						F.line = 2640;
						if (s_167425[s_167425_Idx] != null) { addChar(s_167425[s_167425_Idx], 36); } else { s_167425[s_167425_Idx] = [36]; };
						F.line = 2641;
						i_167432 = addInt(i_167432, 2);
						break;
					case 49:
					case 50:
					case 51:
					case 52:
					case 53:
					case 54:
					case 55:
					case 56:
					case 57:
					case 45:
						F.line = 2643;
						var j_167459 = 0;
						F.line = 2644;
						i_167432 = addInt(i_167432, 1);
						F.line = 2645;
						var negative_167466 = (formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0] == 45);
						if (negative_167466) {
						F.line = 2646;
						i_167432 = addInt(i_167432, 1);
						}
						
						L3: do {
							F.line = 2647;
								L4: while (true) {
									if (!(i_167432 < (formatstr_167426 != null ? formatstr_167426.length : 0))) Tmp5 = false; else {										Tmp5 = (ConstSet5[formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]] != undefined);									}								if (!Tmp5) break L4;
									F.line = 2648;
									j_167459 = subInt(addInt(mulInt(j_167459, 10), formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]), 48);
									F.line = 2649;
									i_167432 = addInt(i_167432, 1);
								}
						} while(false);
						F.line = 2650;
						if (!(negative_167466)) {
						Tmp6 = subInt(j_167459, 1);
						}
						else {
						Tmp6 = subInt((a_167428 != null ? a_167428.length : 0), j_167459);
						}
						
						var idx_167497 = Tmp6;
							if ((idx_167497 < 0)) Tmp7 = true; else {								Tmp7 = ((a_167428 != null ? (a_167428.length-1) : -1) < idx_167497);							}						if (Tmp7) {
						F.line = 2651;
						invalid_format_string_167339();
						}
						
						F.line = 2652;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(idx_167497, 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(idx_167497, 0, a_167428.length+0-1)-0].slice(); };
						break;
					case 123:
						F.line = 2654;
						var j_167503 = addInt(i_167432, 2);
						F.line = 2655;
						var k_167505 = 0;
						F.line = 2656;
						var negative_167506 = (formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0] == 45);
						if (negative_167506) {
						F.line = 2657;
						j_167503 = addInt(j_167503, 1);
						}
						
						F.line = 2658;
						var is_number_167514 = 0;
						L8: do {
							F.line = 2659;
								L9: while (true) {
								if (!((j_167503 < (formatstr_167426 != null ? formatstr_167426.length : 0)) && !((ConstSet6[formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0]] != undefined)))) break L9;
									if ((ConstSet7[formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0]] != undefined)) {
									F.line = 2661;
									k_167505 = subInt(addInt(mulInt(k_167505, 10), formatstr_167426[chckIndx(j_167503, 0, formatstr_167426.length+0-1)-0]), 48);
									if ((is_number_167514 == 0)) {
									F.line = 2662;
									is_number_167514 = 1;
									}
									
									}
									else {
										F.line = 2664;
										is_number_167514 = -1;
									}
									
									F.line = 2665;
									j_167503 = addInt(j_167503, 1);
								}
						} while(false);
						if ((is_number_167514 == 1)) {
						F.line = 2667;
						if (!(negative_167506)) {
						Tmp10 = subInt(k_167505, 1);
						}
						else {
						Tmp10 = subInt((a_167428 != null ? a_167428.length : 0), k_167505);
						}
						
						var idx_167547 = Tmp10;
							if ((idx_167547 < 0)) Tmp11 = true; else {								Tmp11 = ((a_167428 != null ? (a_167428.length-1) : -1) < idx_167547);							}						if (Tmp11) {
						F.line = 2668;
						invalid_format_string_167339();
						}
						
						F.line = 2669;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(idx_167547, 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(idx_167547, 0, a_167428.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2671;
							var x_167553 = find_normalized_167306(substr_29822(formatstr_167426, addInt(i_167432, 2), subInt(j_167503, 1)), a_167428);
								if (!(0 <= x_167553)) Tmp12 = false; else {									Tmp12 = (x_167553 < (a_167428 != null ? (a_167428.length-1) : -1));								}							if (Tmp12) {
							F.line = 2672;
							if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(addInt(x_167553, 1), 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(addInt(x_167553, 1), 0, a_167428.length+0-1)-0].slice(); };
							}
							else {
								F.line = 2673;
							invalid_format_string_167339();
							}
							
						}
						
						F.line = 2674;
						i_167432 = addInt(j_167503, 1);
						break;
					case 97:
					case 98:
					case 99:
					case 100:
					case 101:
					case 102:
					case 103:
					case 104:
					case 105:
					case 106:
					case 107:
					case 108:
					case 109:
					case 110:
					case 111:
					case 112:
					case 113:
					case 114:
					case 115:
					case 116:
					case 117:
					case 118:
					case 119:
					case 120:
					case 121:
					case 122:
					case 65:
					case 66:
					case 67:
					case 68:
					case 69:
					case 70:
					case 71:
					case 72:
					case 73:
					case 74:
					case 75:
					case 76:
					case 77:
					case 78:
					case 79:
					case 80:
					case 81:
					case 82:
					case 83:
					case 84:
					case 85:
					case 86:
					case 87:
					case 88:
					case 89:
					case 90:
					case 128:
					case 129:
					case 130:
					case 131:
					case 132:
					case 133:
					case 134:
					case 135:
					case 136:
					case 137:
					case 138:
					case 139:
					case 140:
					case 141:
					case 142:
					case 143:
					case 144:
					case 145:
					case 146:
					case 147:
					case 148:
					case 149:
					case 150:
					case 151:
					case 152:
					case 153:
					case 154:
					case 155:
					case 156:
					case 157:
					case 158:
					case 159:
					case 160:
					case 161:
					case 162:
					case 163:
					case 164:
					case 165:
					case 166:
					case 167:
					case 168:
					case 169:
					case 170:
					case 171:
					case 172:
					case 173:
					case 174:
					case 175:
					case 176:
					case 177:
					case 178:
					case 179:
					case 180:
					case 181:
					case 182:
					case 183:
					case 184:
					case 185:
					case 186:
					case 187:
					case 188:
					case 189:
					case 190:
					case 191:
					case 192:
					case 193:
					case 194:
					case 195:
					case 196:
					case 197:
					case 198:
					case 199:
					case 200:
					case 201:
					case 202:
					case 203:
					case 204:
					case 205:
					case 206:
					case 207:
					case 208:
					case 209:
					case 210:
					case 211:
					case 212:
					case 213:
					case 214:
					case 215:
					case 216:
					case 217:
					case 218:
					case 219:
					case 220:
					case 221:
					case 222:
					case 223:
					case 224:
					case 225:
					case 226:
					case 227:
					case 228:
					case 229:
					case 230:
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
					case 236:
					case 237:
					case 238:
					case 239:
					case 240:
					case 241:
					case 242:
					case 243:
					case 244:
					case 245:
					case 246:
					case 247:
					case 248:
					case 249:
					case 250:
					case 251:
					case 252:
					case 253:
					case 254:
					case 255:
					case 95:
						F.line = 2676;
						var j_167560 = addInt(i_167432, 1);
						L13: do {
							F.line = 2677;
								L14: while (true) {
									if (!(j_167560 < (formatstr_167426 != null ? formatstr_167426.length : 0))) Tmp15 = false; else {										Tmp15 = (ConstSet9[formatstr_167426[chckIndx(j_167560, 0, formatstr_167426.length+0-1)-0]] != undefined);									}								if (!Tmp15) break L14;
									F.line = 2677;
									j_167560 = addInt(j_167560, 1);
								}
						} while(false);
						F.line = 2678;
						var x_167573 = find_normalized_167306(substr_29822(formatstr_167426, addInt(i_167432, 1), subInt(j_167560, 1)), a_167428);
							if (!(0 <= x_167573)) Tmp16 = false; else {								Tmp16 = (x_167573 < (a_167428 != null ? (a_167428.length-1) : -1));							}						if (Tmp16) {
						F.line = 2679;
						if (s_167425[s_167425_Idx] != null) { s_167425[s_167425_Idx] = (s_167425[s_167425_Idx]).concat(a_167428[chckIndx(addInt(x_167573, 1), 0, a_167428.length+0-1)-0]); } else { s_167425[s_167425_Idx] = a_167428[chckIndx(addInt(x_167573, 1), 0, a_167428.length+0-1)-0].slice(); };
						}
						else {
							F.line = 2680;
						invalid_format_string_167339();
						}
						
						F.line = 2681;
						i_167432 = j_167560;
						break;
					default: 
						F.line = 2683;
						invalid_format_string_167339();
						break;
					}
					}
					else {
						F.line = 2685;
						if (s_167425[s_167425_Idx] != null) { addChar(s_167425[s_167425_Idx], formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]); } else { s_167425[s_167425_Idx] = [formatstr_167426[chckIndx(i_167432, 0, formatstr_167426.length+0-1)-0]]; };
						F.line = 2686;
						i_167432 = addInt(i_167432, 1);
					}
					
				}
		} while(false);
	framePtr = F.prev;

	
}

function nsuFormatOpenArray(formatstr_167601, a_167603) {
	var result_167604 = [null];

	var F={procname:"strutils.%",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 2733;
		result_167604[0] = nimCopy(null, mnewString(0), NTI138);
		F.line = 2734;
		nsuAddf(result_167604, 0, formatstr_167601, a_167603);
	framePtr = F.prev;

	return result_167604[0];

}

function is_undefined_25483(x_25486) {
	var result_25487 = false;

	var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"reprjs.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_25487 = x_25486 === undefined;
	framePtr = F.prev;

	return result_25487;

}

function add_quoted_245201(s_245204, s_245204_Idx, x_245205) {
	var F={procname:"addQuoted.addQuoted",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 4301;
		if (s_245204[s_245204_Idx] != null) { s_245204[s_245204_Idx] = (s_245204[s_245204_Idx]).concat(reprEnum(x_245205, NTI213202)); } else { s_245204[s_245204_Idx] = reprEnum(x_245205, NTI213202).slice(); };
	framePtr = F.prev;

	
}

function collection_to_string_245133(x_245136, prefix_245137, separator_245138, suffix_245139) {
	var result_245140 = [null];

	var F={procname:"collectionToString.collectionToString",prev:framePtr,filename:"dollars.nim",line:0};
	framePtr = F;
		F.line = 102;
		result_245140[0] = nimCopy(null, prefix_245137, NTI138);
		F.line = 103;
		var first_element_245141 = true;
		L1: do {
			F.line = 104;
			var value_245187 = 0;
			F.line = 37;
			var i_246966 = 0;
			L2: do {
				F.line = 38;
					L3: while (true) {
					if (!(i_246966 <= 6)) break L3;
						if ((x_245136[i_246966] != undefined)) {
						F.line = 104;
						value_245187 = i_246966;
						if (first_element_245141) {
						F.line = 106;
						first_element_245141 = false;
						}
						else {
							F.line = 108;
						if (result_245140[0] != null) { result_245140[0] = (result_245140[0]).concat(separator_245138); } else { result_245140[0] = separator_245138.slice(); };
						}
						
						F.line = 117;
						add_quoted_245201(result_245140, 0, value_245187);
						}
						
						F.line = 40;
						i_246966 += 1;
					}
			} while(false);
		} while(false);
		F.line = 118;
		if (result_245140[0] != null) { result_245140[0] = (result_245140[0]).concat(suffix_245139); } else { result_245140[0] = suffix_245139.slice(); };
	framePtr = F.prev;

	return result_245140[0];

}

function HEX24_245127(x_245131) {
	var result_245132 = null;

	var F={procname:"$.$",prev:framePtr,filename:"dollars.nim",line:0};
	framePtr = F;
		F.line = 121;
		result_245132 = nimCopy(null, collection_to_string_245133(x_245131, makeNimstrLit("{"), makeNimstrLit(", "), makeNimstrLit("}")), NTI138);
	framePtr = F.prev;

	return result_245132;

}

function raw_get_222134(t_222138, key_222139, hc_222140, hc_222140_Idx) {
						var Tmp3;

	var result_222141 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"hashcommon.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		hc_222140[hc_222140_Idx] = hash_175180(key_222139);
		if ((hc_222140[hc_222140_Idx] == 0)) {
		F.line = 56;
		hc_222140[hc_222140_Idx] = 314159265;
		}
		
		if (((t_222138.data != null ? t_222138.data.length : 0) == 0)) {
		F.line = 38;
		result_222141 = -1;
		break BeforeRet;
		}
		
		F.line = 39;
		var h_222283 = (hc_222140[hc_222140_Idx] & (t_222138.data != null ? (t_222138.data.length-1) : -1));
		L1: do {
			F.line = 40;
				L2: while (true) {
				if (!is_filled_178418(t_222138.data[chckIndx(h_222283, 0, t_222138.data.length+0-1)-0].Field0)) break L2;
						if (!(t_222138.data[chckIndx(h_222283, 0, t_222138.data.length+0-1)-0].Field0 == hc_222140[hc_222140_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_222138.data[chckIndx(h_222283, 0, t_222138.data.length+0-1)-0].Field2, key_222139);						}					if (Tmp3) {
					F.line = 46;
					result_222141 = h_222283;
					break BeforeRet;
					}
					
					F.line = 47;
					h_222283 = next_try_178435(h_222283, (t_222138.data != null ? (t_222138.data.length-1) : -1));
				}
		} while(false);
		F.line = 48;
		result_222141 = subInt(-1, h_222283);
	} while (false);
	framePtr = F.prev;

	return result_222141;

}

function HEX5BHEX5D_222122(t_222128, key_222129) {
	var result_222131 = null;
	var result_222131_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 258;
		var hc_222132 = [0];
		F.line = 259;
		var index_222133 = raw_get_222134(t_222128, key_222129, hc_222132, 0);
		if ((0 <= index_222133)) {
		F.line = 260;
		result_222131 = t_222128.data[chckIndx(index_222133, 0, t_222128.data.length+0-1)-0]; result_222131_Idx = "Field3";
		}
		else {
			F.line = 3436;
			var e_223003 = null;
			F.line = 3439;
			e_223003 = {m_type: NTI4054, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 263;
			e_223003.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_222129 || []), NTI138);
			F.line = 3432;
			e_223003.parent = null;
			F.line = 263;
			raiseException(e_223003, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_222131, result_222131_Idx];

}

function HEX5BHEX5D_223639(node_223641, name_223642) {
		var Tmp1;
		var Tmp2;

	var result_223643 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		if (!(!((node_223641 == null)))) {
		F.line = 485;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(485, 9) `not isNil(node)` "));
		}
		
		if (!((node_223641.kind == 5))) {
		F.line = 486;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(486, 9) `node.kind == JObject` "));
		}
		
		F.line = 489;
		var Tmp1 = node_223641;
		if (ConstSet12[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
		result_223643 = (Tmp2 = HEX5BHEX5D_222122(Tmp1.fields, name_223642), Tmp2)[0][Tmp2[1]];
	framePtr = F.prev;

	return result_223643;

}

function len_220765(t_220770) {
	var result_220771 = 0;

	var F={procname:"len.len",prev:framePtr,filename:"tables.nim",line:0};
	framePtr = F;
		F.line = 1473;
		result_220771 = t_220770.counter;
	framePtr = F.prev;

	return result_220771;

}

function len_223483(n_223485) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_223486 = 0;

	var F={procname:"json.len",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
		F.line = 473;
		switch (n_223485.kind) {
		case 6:
			F.line = 474;
			var Tmp1 = n_223485;
			if (ConstSet14[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
			result_223486 = ((Tmp2 = Tmp1.elems, Tmp2) != null ? Tmp2.length : 0);
			break;
		case 5:
			F.line = 475;
			var Tmp3 = n_223485;
			if (ConstSet15[Tmp3.kind]===undefined) { raiseFieldError(makeNimstrLit("fields")); }
			result_223486 = len_220765(Tmp3.fields);
			break;
		default: 
			break;
		}
	framePtr = F.prev;

	return result_223486;

}

function HEX5BHEX5D_224369(node_224371, index_224372) {
		var Tmp1;
		var Tmp2;

	var result_224373 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!(!((node_224371 == null)))) {
		F.line = 495;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(495, 9) `not isNil(node)` "));
		}
		
		if (!((node_224371.kind == 6))) {
		F.line = 496;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/pure/json.nim(496, 9) `node.kind == JArray` "));
		}
		
		F.line = 497;
		var Tmp1 = node_224371;
		if (ConstSet17[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("elems")); }
		result_224373 = (Tmp2 = Tmp1.elems, Tmp2)[chckIndx(index_224372, 0, Tmp2.length+0-1)-0];
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_224373;

}
				var Tmp4;
					var Tmp5;
				var Tmp6;
					var Tmp7;
								var Tmp11;
									var Tmp12;
var json_object_245024 = parse_json_232257(makeNimstrLit("{\x0A    \"videos\": [\x0A        {\x0A            \"id\": \"Ra-NXgoMZc8\",\x0A            \"title\": \"Campeonato nihon 2011\",\x0A            \"tags\": [\"#Furusatou no Hibiki\"]\x0A        },\x0A        {\x0A            \"id\": \"oRZp1R0zV18\",\x0A            \"title\": \"Campeonato brasileiro 2019\",\x0A            \"tags\": [\"#Wadatsumi\"]\x0A        },\x0A        {\x0A            \"id\": \"GQujenMmpPU\",\x0A            \"title\": \"2\xC2\xBA Japan Matsuri 2010\",\x0A            \"tags\": [\"#Fuuga tenshou\"]\x0A        },\x0A        {\x0A            \"id\": \"OO9j7rWNk9Y\",\x0A            \"title\": \"10\xC2\xBA Japan Matsuri 2019\",\x0A            \"tags\": [\"#Kenka Yatai\", \"#Pikachu\", \"#Go-en\", \"#Iroha\", \"#Shabondama\", \"#Irodori\", \"#Gekiryu\", \"#Jyuugosou monogatari\"]\x0A        },\x0A        {\x0A            \"id\": \"-X7mBGFsWNU\",\x0A            \"title\": \"Campos do Jord\xC3\xA3o 2017 Asilo Sakura Home\",\x0A            \"tags\": [\"#Shabondama\", \"#Irodori\", \"#Fuuga tenshou\"]\x0A        },\x0A        {\x0A            \"id\": \"8SWoSqLODV4\",\x0A            \"title\": \"Todoroki fest 2016\",\x0A            \"tags\": [\"#Irodori new\", \"#solo TAO\", \"#Shunka\", \"#Yamato gokoro\", \"#Iroha\", \"#Kenka yatai\", \"#Shabondama\", \"#Natsukashiki satou\", \"#Notodaiko\", \"#Omoide\"]\x0A        },\x0A        {\x0A            \"id\": \"DyCbSHwaNHQ\",\x0A            \"title\": \"3\xC2\xBA Japan Matsuri 2012\",\x0A            \"tags\": [\"#Fuuga tenshou\"]\x0A        },\x0A        {\x0A            \"id\": \"IztKDK5iiDw\",\x0A            \"title\": \"6\xC2\xBA Campeonato brasileiro 2009\",\x0A            \"tags\": [\"#Go-en\"]\x0A        },\x0A        {\x0A            \"id\": \"7nBf_6lGyXk\",\x0A            \"title\": \"5\xC2\xBA Campeonato brasileiro 2008\",\x0A            \"tags\": [\"#Wadatsumi\"]\x0A        },\x0A        {\x0A            \"id\": \"5dg42GOmZvs\",\x0A            \"title\": \"Campos do Jord\xC3\xA3o 2017\",\x0A            \"tags\": [\"#Kenka yatai\", \"#Ryoma no tikara\", \"#Shabondama\", \"#Notodaiko\", \"#Fuuga tenshou\", \"#Irodori new\"]\x0A        },\x0A        {\x0A            \"id\": \"yHO-FqF0UtA\",\x0A            \"title\": \"Campeonato UCES 2013\",\x0A            \"tags\": [\"#Kizuki\"]\x0A        },\x0A        {\x0A            \"id\": \"08GS3gPWk2M\",\x0A            \"title\": \"Campeonato brasileiro 2010 - Oodaiko\",\x0A            \"tags\": [\"#Solo de oodaiko do Eiri\"]\x0A        },\x0A        {\x0A            \"id\": \"jbXyJ2erGSY\",\x0A            \"title\": \"Ikoi no sono 2017\",\x0A            \"tags\": [\"#Irodori\", \"#Shabondama\", \"#Fuuga tenshou\", \"#Omoide\"]\x0A        },\x0A        {\x0A            \"id\": \"vVGl0XWC-HY\",\x0A            \"title\": \"7\xC2\xBA Festival do jap\xC3\xA3o da para\xC3\xADba\",\x0A            \"tags\": [\"#Furusatou no hibiki\"]\x0A        },\x0A        {\x0A            \"id\": \"5ikL2dzWxzE\",\x0A            \"title\": \"8\xC2\xBA Japan Matsuri 2017\",\x0A            \"tags\": [\"#Kenka yatai\"]\x0A        },\x0A        {\x0A            \"id\": \"k-YAMycpcdU\",\x0A            \"title\": \"5\xC2\xBA Japan Matsuri 2014\",\x0A            \"tags\": [\"#Fuuga tenshou\"]\x0A        },\x0A        {\x0A            \"id\": \"HCEFaa8zkNs\",\x0A            \"title\": \"Osasco Todorokidaiko ao Vivo na Funda\xC3\xA7\xC3\xA3o Ema Klabin 2010\",\x0A            \"tags\": [\"#Kenka yatai\"]\x0A        },\x0A        {\x0A            \"id\": \"bP99slFincs\",\x0A            \"title\": \"46\xC2\xBA Festival bunkyo 2011\",\x0A            \"tags\": [\"#Shikisai\"]\x0A        },\x0A        {\x0A            \"id\": \"DycWDS8Gwj0\",\x0A            \"title\": \"5\xC2\xBA Japan Matsuri 2014\",\x0A            \"tags\": [\"#Kizuki\"]\x0A        },\x0A        {\x0A            \"id\": \"mKHaRhRsluM\",\x0A            \"title\": \"III Japan Matsuri 2012\",\x0A            \"tags\": [\"#Yamato Gokoro\"]\x0A        },\x0A        {\x0A            \"id\": \"BeU8H1j5YLk\",\x0A            \"title\": \"Apresenta\xC3\xA7\xC3\xA3o Col\xC3\xA9gio Franciscano Jo\xC3\xA3o XXIII 2016\",\x0A            \"tags\": [\"#Irodori\", \"#Iroha\", \"#Shabondama\", \"#Pikachu\", \"#Fuuga tenshou\"]\x0A        },\x0A        {\x0A            \"id\": \"MDmxVTvYzSk\",\x0A            \"title\": \"Apresenta\xC3\xA7\xC3\xA3o na USP\",\x0A            \"tags\": [\"#Kenka Yatai\"]\x0A        },\x0A        {\x0A            \"id\": \"uNopg7nG5cw\",\x0A            \"title\": \"12\xC2\xAA Festa Japonesa de Sorocaba 2012\",\x0A            \"tags\": [\"#Yamato gokoro\"]\x0A        },\x0A        {\x0A            \"id\": \"hjt11pesTuU\",\x0A            \"title\": \"5\xC2\xBA Japan Matsuri 2014\",\x0A            \"tags\": [\"#Omoigakenai yuuyake\", \"#Iroha\", \"#Pikachu\"]\x0A        },\x0A        {\x0A            \"id\": \"QedrzlLlAH0\",\x0A            \"title\": \"Campeonato UCES 2015\",\x0A            \"tags\": [\"#Pikachu\"]\x0A        },\x0A        {\x0A            \"id\": \"FmOZ9MOmzIU\",\x0A            \"title\": \"Apresenta\xC3\xA7\xC3\xA3o Moa 2014\",\x0A            \"tags\": [\"#Pikachu\", \"#Kenka yatai\"]\x0A        },\x0A        {\x0A            \"id\": \"Pimm9cTGsyk\",\x0A            \"title\": \"8\xC2\xBA Japan Matsuri 2017\",\x0A            \"tags\": [\"#Irodori\"]\x0A        },\x0A        {\x0A            \"id\": \"tUZdV9xQ9oA\",\x0A            \"title\": \"Apresenta\xC3\xA7\xC3\xA3o em Jo\xC3\xA3o Pessoa 2012\",\x0A            \"tags\": [\"#Go-en\"]\x0A        },\x0A        {\x0A            \"id\": \"8xezdnAazDI\",\x0A            \"title\": \"Treino geral Itapetininga 2016\",\x0A            \"tags\": [\"#Seinansei monogatari\"]\x0A        },\x0A        {\x0A            \"id\": \"k7aQrFImxoo\",\x0A            \"title\": \"5\xC2\xBA Japan matsuri 2014\",\x0A            \"tags\": [\"#Omoigakenai yuukake\"]\x0A        },\x0A        {\x0A            \"id\": \"6iX_W2zuB_M\",\x0A            \"title\": \"Festival do Jap\xC3\xA3o 2010\",\x0A            \"tags\": [\"#Shikisai\"]\x0A        },\x0A        {\x0A            \"id\": \"DByqM8oHaIA\",\x0A            \"title\": \"54\xC2\xBA Undokai da acenbo 2018\",\x0A            \"tags\": [\"#Fuuga tenshou\", \"#Irodori\", \"#Jyuugosou monogatari\"]\x0A        }\x0A    ]\x0A}"));
var temp_245035 = json_object_245024;
if (!((ConstSet4[temp_245035.kind] != undefined))) {
var msg_245118 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_245127(ConstSet10), makeNimstrLit("temp245035"), reprEnum(temp_245035.kind, NTI213202)]);
var e_245466 = [null];
e_245466[0] = {m_type: NTI208039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
e_245466[0].message = nimCopy(null, msg_245118, NTI138);
e_245466[0].parent = null;
raiseException(e_245466[0], "JsonKindError");
}

var res_245115 = [{videos: null}];
var list_245104 = [[]];
if (!((ConstSet11[HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")).kind] != undefined))) {
var msg_245624 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_245127(ConstSet13), makeNimstrLit("temp245035[\"videos\"]"), reprEnum(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")).kind, NTI213202)]);
var e_245644 = [null];
e_245644[0] = {m_type: NTI208039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
e_245644[0].message = nimCopy(null, msg_245624, NTI138);
e_245644[0].parent = null;
raiseException(e_245644[0], "JsonKindError");
}

L1: do {
	var i_245078 = [0];
	var colontmp__246911 = 0;
	colontmp__246911 = len_223483(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")));
	var i_246912 = 0;
	L2: do {
			L3: while (true) {
			if (!(i_246912 < colontmp__246911)) break L3;
				i_245078[0] = i_246912;
				if (!((ConstSet16[HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]).kind] != undefined))) {
				var msg_245818 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_245127(ConstSet18), makeNimstrLit("temp245035[\"videos\"][i245078]"), reprEnum(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]).kind, NTI213202)]);
				var e_245838 = [null];
				e_245838[0] = {m_type: NTI208039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
				e_245838[0].message = nimCopy(null, msg_245818, NTI138);
				e_245838[0].parent = null;
				raiseException(e_245838[0], "JsonKindError");
				}
				
				var res_245116 = [{id: null, title: null, tags: null}];
				if (!((ConstSet19[HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("id")).kind] != undefined))) {
				var msg_246010 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_245127(ConstSet20), makeNimstrLit("temp245035[\"videos\"][i245078][\"id\"]"), reprEnum(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("id")).kind, NTI213202)]);
				var e_246030 = [null];
				e_246030[0] = {m_type: NTI208039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
				e_246030[0].message = nimCopy(null, msg_246010, NTI138);
				e_246030[0].parent = null;
				raiseException(e_246030[0], "JsonKindError");
				}
				
				if ((HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("id")).kind == 0)) {
				Tmp4 = [];
				}
				else {
					var Tmp5 = HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("id"));
					if (ConstSet21[Tmp5.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
				Tmp4 = Tmp5.str;
				}
				
				res_245116[0].id = nimCopy(null, Tmp4, NTI138);
				if (!((ConstSet22[HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("title")).kind] != undefined))) {
				var msg_246216 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_245127(ConstSet23), makeNimstrLit("temp245035[\"videos\"][i245078][\"title\"]"), reprEnum(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("title")).kind, NTI213202)]);
				var e_246236 = [null];
				e_246236[0] = {m_type: NTI208039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
				e_246236[0].message = nimCopy(null, msg_246216, NTI138);
				e_246236[0].parent = null;
				raiseException(e_246236[0], "JsonKindError");
				}
				
				if ((HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("title")).kind == 0)) {
				Tmp6 = [];
				}
				else {
					var Tmp7 = HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("title"));
					if (ConstSet24[Tmp7.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
				Tmp6 = Tmp7.str;
				}
				
				res_245116[0].title = nimCopy(null, Tmp6, NTI138);
				var list_245103 = [[]];
				if (!((ConstSet25[HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("tags")).kind] != undefined))) {
				var msg_246430 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_245127(ConstSet26), makeNimstrLit("temp245035[\"videos\"][i245078][\"tags\"]"), reprEnum(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("tags")).kind, NTI213202)]);
				var e_246450 = [null];
				e_246450[0] = {m_type: NTI208039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
				e_246450[0].message = nimCopy(null, msg_246430, NTI138);
				e_246450[0].parent = null;
				raiseException(e_246450[0], "JsonKindError");
				}
				
				L8: do {
					var i_245098 = [0];
					var colontmp__246907 = 0;
					colontmp__246907 = len_223483(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("tags")));
					var i_246908 = 0;
					L9: do {
							L10: while (true) {
							if (!(i_246908 < colontmp__246907)) break L10;
								i_245098[0] = i_246908;
								if (!((ConstSet27[HEX5BHEX5D_224369(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("tags")), i_245098[0]).kind] != undefined))) {
								var msg_246618 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_245127(ConstSet28), makeNimstrLit("temp245035[\"videos\"][i245078][\"tags\"][i245098]"), reprEnum(HEX5BHEX5D_224369(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("tags")), i_245098[0]).kind, NTI213202)]);
								var e_246638 = [null];
								e_246638[0] = {m_type: NTI208039, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
								e_246638[0].message = nimCopy(null, msg_246618, NTI138);
								e_246638[0].parent = null;
								raiseException(e_246638[0], "JsonKindError");
								}
								
								if ((HEX5BHEX5D_224369(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("tags")), i_245098[0]).kind == 0)) {
								Tmp11 = [];
								}
								else {
									var Tmp12 = HEX5BHEX5D_224369(HEX5BHEX5D_223639(HEX5BHEX5D_224369(HEX5BHEX5D_223639(temp_245035, makeNimstrLit("videos")), i_245078[0]), makeNimstrLit("tags")), i_245098[0]);
									if (ConstSet29[Tmp12.kind]===undefined) { raiseFieldError(makeNimstrLit("str")); }
								Tmp11 = Tmp12.str;
								}
								
								var Tmp13 = nimCopy(null, Tmp11, NTI138);
								if (list_245103[0] != null) { list_245103[0].push(Tmp13); } else { list_245103[0] = [Tmp13]; };
								i_246908 += 1;
							}
					} while(false);
				} while(false);
				res_245116[0].tags = nimCopy(null, list_245103[0], NTI246415);
				var Tmp14 = nimCopy(null, res_245116[0], NTI245015);
				if (list_245104[0] != null) { list_245104[0].push(Tmp14); } else { list_245104[0] = [Tmp14]; };
				i_246912 += 1;
			}
	} while(false);
} while(false);
res_245115[0].videos = nimCopy(null, list_245104[0], NTI245609);
var data_246829 = nimCopy(null, res_245115[0], NTI245017);

function new_seq_247400(len_247403) {
	var result_247405 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_247405 = new Array(len_247403); for (var i=0;i<len_247403;++i) {result_247405[i]={id: null, title: null, tags: null};}	framePtr = F.prev;

	return result_247405;

}

function filter_247389(s_247393, pred_247396) {
	var result_247398 = null;

	var F={procname:"filter.filter",prev:framePtr,filename:"sequtils.nim",line:0};
	framePtr = F;
		F.line = 392;
		result_247398 = nimCopy(null, new_seq_247400(0), NTI247404);
		L1: do {
			F.line = 393;
			var i_247437 = 0;
			F.line = 2716;
			var colontmp__247487 = 0;
			F.line = 393;
			colontmp__247487 = (s_247393 != null ? s_247393.length : 0);
			F.line = 2717;
			var i_247488 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_247488 < colontmp__247487)) break L3;
						F.line = 393;
						i_247437 = i_247488;
						if (pred_247396(s_247393[chckIndx(i_247437, 0, s_247393.length+0-1)-0])) {
						F.line = 395;
						var Tmp4 = nimCopy(null, s_247393[chckIndx(i_247437, 0, s_247393.length+0-1)-0], NTI245015);
						if (result_247398 != null) { result_247398.push(Tmp4); } else { result_247398 = [Tmp4]; };
						}
						
						F.line = 2720;
						i_247488 = addInt(i_247488, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_247398;

}

function nsuFindChar(s_164416, sub_164417, start_164418, last_164419) {
		var Tmp1;

	var result_164421 = 0;

	var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1862;
		if ((last_164419 == 0)) {
		Tmp1 = (s_164416 != null ? (s_164416.length-1) : -1);
		}
		else {
		Tmp1 = last_164419;
		}
		
		var last_164423 = Tmp1;
		L2: do {
			F.line = 1874;
			var i_164806 = 0;
			F.line = 2679;
			var colontmp__247501 = 0;
			F.line = 1874;
			colontmp__247501 = start_164418;
			F.line = 2689;
			var res_247502 = colontmp__247501;
			L3: do {
				F.line = 2690;
					L4: while (true) {
					if (!(res_247502 <= last_164423)) break L4;
						F.line = 1874;
						i_164806 = res_247502;
						if ((sub_164417 == s_164416[chckIndx(i_164806, 0, s_164416.length+0-1)-0])) {
						F.line = 1875;
						result_164421 = i_164806;
						break BeforeRet;
						}
						
						F.line = 2692;
						res_247502 = addInt(res_247502, 1);
					}
			} while(false);
		} while(false);
		F.line = 1876;
		result_164421 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_164421;

}

function nsuInitSkipTable(a_164144, sub_164145) {
	var F={procname:"strutils.initSkipTable",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1798;
		var m_164146 = (sub_164145 != null ? sub_164145.length : 0);
		F.line = 1799;
		var i_164148 = 0;
		L1: do {
			F.line = 1800;
				L2: while (true) {
				if (!(i_164148 <= 248)) break L2;
					F.line = 1801;
					a_164144[chckIndx(chckRange(addInt(i_164148, 0), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1802;
					a_164144[chckIndx(chckRange(addInt(i_164148, 1), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1803;
					a_164144[chckIndx(chckRange(addInt(i_164148, 2), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1804;
					a_164144[chckIndx(chckRange(addInt(i_164148, 3), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1805;
					a_164144[chckIndx(chckRange(addInt(i_164148, 4), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1806;
					a_164144[chckIndx(chckRange(addInt(i_164148, 5), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1807;
					a_164144[chckIndx(chckRange(addInt(i_164148, 6), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1808;
					a_164144[chckIndx(chckRange(addInt(i_164148, 7), 0, 255), 0, a_164144.length+0-1)-0] = m_164146;
					F.line = 1809;
					i_164148 = addInt(i_164148, 8);
				}
		} while(false);
		L3: do {
			F.line = 1811;
			var i_164165 = 0;
			F.line = 2716;
			var colontmp__247509 = 0;
			F.line = 1811;
			colontmp__247509 = subInt(m_164146, 1);
			F.line = 2717;
			var i_247510 = 0;
			L4: do {
				F.line = 2718;
					L5: while (true) {
					if (!(i_247510 < colontmp__247509)) break L5;
						F.line = 1811;
						i_164165 = i_247510;
						F.line = 1812;
						a_164144[chckIndx(sub_164145[chckIndx(i_164165, 0, sub_164145.length+0-1)-0], 0, a_164144.length+0-1)-0] = subInt(subInt(m_164146, 1), i_164165);
						F.line = 2720;
						i_247510 = addInt(i_247510, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function nsuFindStrA(a_164181, s_164182, sub_164183, start_164184, last_164185) {
		var Tmp1;

	var result_164187 = 0;

	var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1822;
		if ((last_164185 == 0)) {
		Tmp1 = (s_164182 != null ? (s_164182.length-1) : -1);
		}
		else {
		Tmp1 = last_164185;
		}
		
		var last_164189 = Tmp1;
		F.line = 1823;
		var sub_last_164190 = subInt((sub_164183 != null ? sub_164183.length : 0), 1);
		if ((sub_last_164190 == -1)) {
		F.line = 1828;
		result_164187 = start_164184;
		break BeforeRet;
		}
		
		F.line = 1832;
		var skip_164192 = start_164184;
		L2: do {
			F.line = 1834;
				L3: while (true) {
				if (!(sub_last_164190 <= subInt(last_164189, skip_164192))) break L3;
					F.line = 1835;
					var i_164193 = sub_last_164190;
					L4: do {
						F.line = 1836;
							L5: while (true) {
							if (!(s_164182[chckIndx(addInt(skip_164192, i_164193), 0, s_164182.length+0-1)-0] == sub_164183[chckIndx(i_164193, 0, sub_164183.length+0-1)-0])) break L5;
								if ((i_164193 == 0)) {
								F.line = 1838;
								result_164187 = skip_164192;
								break BeforeRet;
								}
								
								F.line = 1839;
								i_164193 = subInt(i_164193, 1);
							}
					} while(false);
					F.line = 1840;
					skip_164192 = addInt(skip_164192, a_164181[chckIndx(s_164182[chckIndx(addInt(skip_164192, sub_last_164190), 0, s_164182.length+0-1)-0], 0, a_164181.length+0-1)-0]);
				}
		} while(false);
		F.line = 1841;
		result_164187 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_164187;

}

function nsuFindStr(s_165054, sub_165055, start_165056, last_165057) {
	var result_165059 = 0;

	var F={procname:"strutils.find",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((s_165054 != null ? s_165054.length : 0) < (sub_165055 != null ? sub_165055.length : 0))) {
		F.line = 1907;
		result_165059 = -1;
		break BeforeRet;
		}
		
		if (((sub_165055 != null ? sub_165055.length : 0) == 1)) {
		F.line = 1908;
		result_165059 = nsuFindChar(s_165054, sub_165055[chckIndx(0, 0, sub_165055.length+0-1)-0], start_165056, last_165057);
		break BeforeRet;
		}
		
		F.line = 1909;
		var a_165061 = [new Int32Array(256)];
		F.line = 1910;
		nsuInitSkipTable(a_165061[0], sub_165055);
		F.line = 1911;
		result_165059 = nsuFindStrA(a_165061[0], s_165054, sub_165055, start_165056, last_165057);
	} while (false);
	framePtr = F.prev;

	return result_165059;

}

function contains_165677(s_165679, sub_165680) {
	var result_165681 = false;

	var F={procname:"strutils.contains",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 2044;
		result_165681 = (0 <= nsuFindStr(s_165679, sub_165680, 0, 0));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_165681;

}

function binary_search_89159(c_89161, tab_89163, len_89164, stride_89165) {
			var Tmp3;

	var result_89166 = 0;

	var F={procname:"unicode.binarySearch",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 466;
		var n_89167 = len_89164;
		F.line = 467;
		var t_89169 = 0;
		L1: do {
			F.line = 468;
				L2: while (true) {
				if (!(1 < n_89167)) break L2;
					F.line = 469;
					var m_89172 = divInt(n_89167, 2);
					F.line = 470;
					var p_89173 = addInt(t_89169, mulInt(m_89172, stride_89165));
					if ((tab_89163[chckIndx(p_89173, 0, tab_89163.length+0-1)-0] <= ((c_89161)|0))) {
					F.line = 472;
					t_89169 = p_89173;
					F.line = 473;
					n_89167 = subInt(n_89167, m_89172);
					}
					else {
						F.line = 475;
						n_89167 = m_89172;
					}
					
				}
		} while(false);
			if (!!((n_89167 == 0))) Tmp3 = false; else {				Tmp3 = (tab_89163[chckIndx(t_89169, 0, tab_89163.length+0-1)-0] <= ((c_89161)|0));			}		if (Tmp3) {
		F.line = 477;
		result_89166 = t_89169;
		break BeforeRet;
		}
		
		F.line = 478;
		result_89166 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_89166;

}

function nuctoLower(c_89190) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_89191 = 0;

	var F={procname:"unicode.toLower",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 489;
		var c_89192 = c_89190;
		F.line = 490;
		var p_89216 = binary_search_89159(c_89192, [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534], 45, 3);
			if (!(0 <= p_89216)) Tmp2 = false; else {				Tmp2 = (to_lower_ranges_85292[chckIndx(p_89216, 0, to_lower_ranges_85292.length+0-1)-0] <= ((c_89192)|0));			}			if (!Tmp2) Tmp1 = false; else {				Tmp1 = (((c_89192)|0) <= to_lower_ranges_85292[chckIndx(addInt(p_89216, 1), 0, to_lower_ranges_85292.length+0-1)-0]);			}		if (Tmp1) {
		F.line = 492;
		result_89191 = subInt(addInt(((c_89192)|0), to_lower_ranges_85292[chckIndx(addInt(p_89216, 2), 0, to_lower_ranges_85292.length+0-1)-0]), 500);
		break BeforeRet;
		}
		
		F.line = 493;
		p_89216 = binary_search_89159(c_89192, [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884], 610, 2);
			if (!(0 <= p_89216)) Tmp3 = false; else {				Tmp3 = (((c_89192)|0) == to_lower_singlets_86562[chckIndx(p_89216, 0, to_lower_singlets_86562.length+0-1)-0]);			}		if (Tmp3) {
		F.line = 495;
		result_89191 = subInt(addInt(((c_89192)|0), to_lower_singlets_86562[chckIndx(addInt(p_89216, 1), 0, to_lower_singlets_86562.length+0-1)-0]), 500);
		break BeforeRet;
		}
		
		F.line = 496;
		result_89191 = c_89192;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_89191;

}

function nuctoLowerStr(s_98622) {
	var result_98623 = null;

	var F={procname:"unicode.toLower",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
		F.line = 656;
		result_98623 = nimCopy(null, mnewString(chckRange((s_98622 != null ? s_98622.length : 0), 0, 2147483647)), NTI138);
		F.line = 658;
		var i_98624 = 0;
		F.line = 659;
		var result_index_98625 = 0;
		F.line = 660;
		var rune_98626 = 0;
		L1: do {
			F.line = 678;
				L2: while (true) {
				if (!(i_98624 < (s_98622 != null ? s_98622.length : 0))) break L2;
					if ((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] <= 127)) {
					F.line = 87;
					rune_98626 = s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0];
					F.line = 88;
					i_98624 = addInt(i_98624, 1);
					}
					else {
					if ((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((i_98624 <= subInt((s_98622 != null ? s_98622.length : 0), 2))) {
					F.line = 92;
					rune_98626 = (((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] & 31) << 6) | (s_98622[chckIndx(addInt(i_98624, 1), 0, s_98622.length+0-1)-0] & 63));
					F.line = 94;
					i_98624 = addInt(i_98624, 2);
					}
					else {
						F.line = 96;
						rune_98626 = 65533;
						F.line = 97;
						i_98624 = addInt(i_98624, 1);
					}
					
					}
					else {
					if ((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					if ((i_98624 <= subInt((s_98622 != null ? s_98622.length : 0), 3))) {
					F.line = 102;
					rune_98626 = ((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] & 15) << 12) | ((s_98622[chckIndx(addInt(i_98624, 1), 0, s_98622.length+0-1)-0] & 63) << 6)) | (s_98622[chckIndx(addInt(i_98624, 2), 0, s_98622.length+0-1)-0] & 63));
					F.line = 105;
					i_98624 = addInt(i_98624, 3);
					}
					else {
						F.line = 107;
						rune_98626 = 65533;
						F.line = 108;
						i_98624 = addInt(i_98624, 1);
					}
					
					}
					else {
					if ((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					if ((i_98624 <= subInt((s_98622 != null ? s_98622.length : 0), 4))) {
					F.line = 114;
					rune_98626 = (((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] & 7) << 18) | ((s_98622[chckIndx(addInt(i_98624, 1), 0, s_98622.length+0-1)-0] & 63) << 12)) | ((s_98622[chckIndx(addInt(i_98624, 2), 0, s_98622.length+0-1)-0] & 63) << 6)) | (s_98622[chckIndx(addInt(i_98624, 3), 0, s_98622.length+0-1)-0] & 63));
					F.line = 118;
					i_98624 = addInt(i_98624, 4);
					}
					else {
						F.line = 120;
						rune_98626 = 65533;
						F.line = 121;
						i_98624 = addInt(i_98624, 1);
					}
					
					}
					else {
					if ((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					if ((i_98624 <= subInt((s_98622 != null ? s_98622.length : 0), 5))) {
					F.line = 128;
					rune_98626 = ((((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] & 3) << 24) | ((s_98622[chckIndx(addInt(i_98624, 1), 0, s_98622.length+0-1)-0] & 63) << 18)) | ((s_98622[chckIndx(addInt(i_98624, 2), 0, s_98622.length+0-1)-0] & 63) << 12)) | ((s_98622[chckIndx(addInt(i_98624, 3), 0, s_98622.length+0-1)-0] & 63) << 6)) | (s_98622[chckIndx(addInt(i_98624, 4), 0, s_98622.length+0-1)-0] & 63));
					F.line = 133;
					i_98624 = addInt(i_98624, 5);
					}
					else {
						F.line = 135;
						rune_98626 = 65533;
						F.line = 136;
						i_98624 = addInt(i_98624, 1);
					}
					
					}
					else {
					if ((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					if ((i_98624 <= subInt((s_98622 != null ? s_98622.length : 0), 6))) {
					F.line = 144;
					rune_98626 = (((((((s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0] & 1) << 30) | ((s_98622[chckIndx(addInt(i_98624, 1), 0, s_98622.length+0-1)-0] & 63) << 24)) | ((s_98622[chckIndx(addInt(i_98624, 2), 0, s_98622.length+0-1)-0] & 63) << 18)) | ((s_98622[chckIndx(addInt(i_98624, 3), 0, s_98622.length+0-1)-0] & 63) << 12)) | ((s_98622[chckIndx(addInt(i_98624, 4), 0, s_98622.length+0-1)-0] & 63) << 6)) | (s_98622[chckIndx(addInt(i_98624, 5), 0, s_98622.length+0-1)-0] & 63));
					F.line = 150;
					i_98624 = addInt(i_98624, 6);
					}
					else {
						F.line = 152;
						rune_98626 = 65533;
						F.line = 153;
						i_98624 = addInt(i_98624, 1);
					}
					
					}
					else {
						F.line = 155;
						rune_98626 = s_98622[chckIndx(i_98624, 0, s_98622.length+0-1)-0];
						F.line = 156;
						i_98624 = addInt(i_98624, 1);
					}
					}}}}}
					F.line = 663;
					rune_98626 = nuctoLower(rune_98626);
					F.line = 217;
					var i_101207 = rune_98626;
					if ((i_101207 <= 127)) {
					F.line = 219;
					(result_98623 == null ? result_98623 = mnewString(chckRange(addInt(result_index_98625, 1), 0, 2147483647)) : result_98623.length = chckRange(addInt(result_index_98625, 1), 0, 2147483647));
					F.line = 220;
					result_98623[chckIndx(addInt(result_index_98625, 0), 0, result_98623.length+0-1)-0] = chckRange(i_101207, 0, 255);
					F.line = 221;
					result_index_98625 = addInt(result_index_98625, 1);
					}
					else {
					if ((i_101207 <= 2047)) {
					F.line = 223;
					(result_98623 == null ? result_98623 = mnewString(chckRange(addInt(result_index_98625, 2), 0, 2147483647)) : result_98623.length = chckRange(addInt(result_index_98625, 2), 0, 2147483647));
					F.line = 224;
					result_98623[chckIndx(addInt(result_index_98625, 0), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 >> 6) | 192), 0, 255);
					F.line = 225;
					result_98623[chckIndx(addInt(result_index_98625, 1), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 & 63) | 128), 0, 255);
					F.line = 226;
					result_index_98625 = addInt(result_index_98625, 2);
					}
					else {
					if ((i_101207 <= 65535)) {
					F.line = 228;
					(result_98623 == null ? result_98623 = mnewString(chckRange(addInt(result_index_98625, 3), 0, 2147483647)) : result_98623.length = chckRange(addInt(result_index_98625, 3), 0, 2147483647));
					F.line = 229;
					result_98623[chckIndx(addInt(result_index_98625, 0), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 >> 12) | 224), 0, 255);
					F.line = 230;
					result_98623[chckIndx(addInt(result_index_98625, 1), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 6) & 63) | 128), 0, 255);
					F.line = 231;
					result_98623[chckIndx(addInt(result_index_98625, 2), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 & 63) | 128), 0, 255);
					F.line = 232;
					result_index_98625 = addInt(result_index_98625, 3);
					}
					else {
					if ((i_101207 <= 2097151)) {
					F.line = 234;
					(result_98623 == null ? result_98623 = mnewString(chckRange(addInt(result_index_98625, 4), 0, 2147483647)) : result_98623.length = chckRange(addInt(result_index_98625, 4), 0, 2147483647));
					F.line = 235;
					result_98623[chckIndx(addInt(result_index_98625, 0), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 >> 18) | 240), 0, 255);
					F.line = 236;
					result_98623[chckIndx(addInt(result_index_98625, 1), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 12) & 63) | 128), 0, 255);
					F.line = 237;
					result_98623[chckIndx(addInt(result_index_98625, 2), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 6) & 63) | 128), 0, 255);
					F.line = 238;
					result_98623[chckIndx(addInt(result_index_98625, 3), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 & 63) | 128), 0, 255);
					F.line = 239;
					result_index_98625 = addInt(result_index_98625, 4);
					}
					else {
					if ((i_101207 <= 67108863)) {
					F.line = 241;
					(result_98623 == null ? result_98623 = mnewString(chckRange(addInt(result_index_98625, 5), 0, 2147483647)) : result_98623.length = chckRange(addInt(result_index_98625, 5), 0, 2147483647));
					F.line = 242;
					result_98623[chckIndx(addInt(result_index_98625, 0), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 >> 24) | 248), 0, 255);
					F.line = 243;
					result_98623[chckIndx(addInt(result_index_98625, 1), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 18) & 63) | 128), 0, 255);
					F.line = 244;
					result_98623[chckIndx(addInt(result_index_98625, 2), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 12) & 63) | 128), 0, 255);
					F.line = 245;
					result_98623[chckIndx(addInt(result_index_98625, 3), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 6) & 63) | 128), 0, 255);
					F.line = 246;
					result_98623[chckIndx(addInt(result_index_98625, 4), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 & 63) | 128), 0, 255);
					F.line = 247;
					result_index_98625 = addInt(result_index_98625, 5);
					}
					else {
					if ((i_101207 <= 2147483647)) {
					F.line = 249;
					(result_98623 == null ? result_98623 = mnewString(chckRange(addInt(result_index_98625, 6), 0, 2147483647)) : result_98623.length = chckRange(addInt(result_index_98625, 6), 0, 2147483647));
					F.line = 250;
					result_98623[chckIndx(addInt(result_index_98625, 0), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 >> 30) | 252), 0, 255);
					F.line = 251;
					result_98623[chckIndx(addInt(result_index_98625, 1), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 24) & 63) | 128), 0, 255);
					F.line = 252;
					result_98623[chckIndx(addInt(result_index_98625, 2), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 18) & 63) | 128), 0, 255);
					F.line = 253;
					result_98623[chckIndx(addInt(result_index_98625, 3), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 12) & 63) | 128), 0, 255);
					F.line = 254;
					result_98623[chckIndx(addInt(result_index_98625, 4), 0, result_98623.length+0-1)-0] = chckRange((((i_101207 >> 6) & 63) | 128), 0, 255);
					F.line = 255;
					result_98623[chckIndx(addInt(result_index_98625, 5), 0, result_98623.length+0-1)-0] = chckRange(((i_101207 & 63) | 128), 0, 255);
					F.line = 256;
					result_index_98625 = addInt(result_index_98625, 6);
					}
					else {
					}
					}}}}}
				}
		} while(false);
	framePtr = F.prev;

	return result_98623;

}

function some_item_contains_247015(list_247018, str_247019) {
	var result_247020 = false;

	var F={procname:"taiko.someItemContains",prev:framePtr,filename:"taiko.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		L1: do {
			F.line = 43;
			var item_247214 = null;
			F.line = 185;
			var i_247559 = 0;
			F.line = 186;
			var l_247560 = (list_247018 != null ? list_247018.length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_247559 < l_247560)) break L3;
						F.line = 43;
						item_247214 = list_247018[chckIndx(i_247559, 0, list_247018.length+0-1)-0];
						if (contains_165677(item_247214, str_247019)) {
						F.line = 45;
						result_247020 = true;
						break BeforeRet;
						}
						
						F.line = 189;
						i_247559 = addInt(i_247559, 1);
						if (!(((list_247018 != null ? list_247018.length : 0) == l_247560))) {
						F.line = 190;
						failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 46;
		result_247020 = false;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_247020;

}

function map_247291(s_247296, op_247299) {
	var result_247301 = null;

	var F={procname:"map.map",prev:framePtr,filename:"sequtils.nim",line:0};
	framePtr = F;
		F.line = 311;
		result_247301 = new Array(chckRange((s_247296 != null ? s_247296.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_247296 != null ? s_247296.length : 0), 0, 2147483647);++i) {result_247301[i]=null;}		L1: do {
			F.line = 312;
			var i_247324 = 0;
			F.line = 2716;
			var colontmp__247563 = 0;
			F.line = 312;
			colontmp__247563 = (s_247296 != null ? s_247296.length : 0);
			F.line = 2717;
			var i_247564 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_247564 < colontmp__247563)) break L3;
						F.line = 312;
						i_247324 = i_247564;
						F.line = 313;
						result_247301[chckIndx(i_247324, 0, result_247301.length+0-1)-0] = nimCopy(null, op_247299(s_247296[chckIndx(i_247324, 0, s_247296.length+0-1)-0]), NTI138);
						F.line = 2720;
						i_247564 = addInt(i_247564, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_247301;

}

function search_filter_247229(search_247231) {
		search_247231 = nimCopy(null, search_247231, NTI138);

		function HEX3Aanonymous_247236(video_247238) {
				var Tmp1;

					function HEX3Aanonymous_247263(a_247271) {
						var result_247275 = null;

						var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"taiko.nim",line:0};
						framePtr = F;
							F.line = 51;
							result_247275 = nimCopy(null, nuctoLowerStr(a_247271), NTI138);
						framePtr = F.prev;

						return result_247275;

					}

			var result_247239 = false;

			var F={procname:"searchFilter.:anonymous",prev:framePtr,filename:"taiko.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 50;
				if (contains_165677(nuctoLowerStr(video_247238.title), nuctoLowerStr(search_247231))) Tmp1 = true; else {					Tmp1 = some_item_contains_247015(map_247291(video_247238.tags, HEX3Aanonymous_247263), nuctoLowerStr(search_247231));				}				result_247239 = Tmp1;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_247239;

		}

	var result_247235 = null;

	var F={procname:"taiko.searchFilter",prev:framePtr,filename:"taiko.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 49;
		result_247235 = HEX3Aanonymous_247236;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_247235;

}

function filter_video_list_247381(list_247384, search_247385) {
	var result_247387 = null;

	var F={procname:"taiko.filterVideoList",prev:framePtr,filename:"taiko.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 54;
		result_247387 = nimCopy(null, filter_247389(list_247384, search_filter_247229(search_247385)), NTI247397);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_247387;

}
var list_247472 = [filter_video_list_247381(data_246829.videos, [])];

function new_seq_197612(len_197615) {
	var result_197617 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_197617 = new Array(len_197615); for (var i=0;i<len_197615;++i) {result_197617[i]={k: 0, parent: null, current: null, newNode: null, oldNode: null};}	framePtr = F.prev;

	return result_197617;

}

function new_seq_197649(len_197652) {
	var result_197654 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 994;
		result_197654 = new Array(len_197652); for (var i=0;i<len_197652;++i) {result_197654[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_197654;

}

function valueHEX3D_169839(n_169841, v_169842) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 156;
		n_169841.text = v_169842;
	framePtr = F.prev;

	
}

function value_169822(n_169824) {
	var result_169825 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 155;
		result_169825 = n_169824.text;
	framePtr = F.prev;

	return result_169825;

}

function wrap_event_189392(d_189394, n_189395, k_189396, action_189397) {

			function later_wrapper_189827() {

					function HEX3Aanonymous_189833(ev_189835) {

							function wrapper_189836() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var v_189838 = ev_189835.target.value;
									F.line = 73;
									valueHEX3D_169839(n_189831, v_189838);
									if (!(!((action_189830 == null)))) {
									F.line = 74;
									failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
									}
									
									F.line = 75;
									action_189830(ev_189835, n_189831);
									if (!((value_169822(n_189831) == v_189838))) {
									F.line = 77;
									ev_189835.target.value = value_169822(n_189831);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if (!((timer_189832 == null))) {
							F.line = 103;
							clearTimeout(timer_189832);
							}
							
							F.line = 104;
							timer_189832 = setTimeout(wrapper_189836, 400);
						framePtr = F.prev;

						
					}

				var result_189829 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 98;
					var action_189830 = action_189397;
					F.line = 99;
					var n_189831 = n_189395;
					F.line = 100;
					var timer_189832 = null;
					F.line = 101;
					result_189829 = HEX3Aanonymous_189833;
				framePtr = F.prev;

				return result_189829;

			}

			function enter_wrapper_189657() {

					function HEX3Aanonymous_189662(ev_189664) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
							if ((ev_189664.keyCode == 13)) {
							F.line = 72;
							var v_189665 = ev_189664.target.value;
							F.line = 73;
							valueHEX3D_169839(n_189661, v_189665);
							if (!(!((action_189660 == null)))) {
							F.line = 74;
							failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_189660(ev_189664, n_189661);
							if (!((value_169822(n_189661) == v_189665))) {
							F.line = 77;
							ev_189664.target.value = value_169822(n_189661);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_189659 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 92;
					var action_189660 = action_189397;
					F.line = 93;
					var n_189661 = n_189395;
					F.line = 94;
					result_189659 = HEX3Aanonymous_189662;
				framePtr = F.prev;

				return result_189659;

			}

			function std_wrapper_189399() {

					function HEX3Aanonymous_189404(ev_189406) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
						framePtr = F;
								if ((n_189403.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_189403.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_189403.kind == 107);								}							if (Tmp1) {
							F.line = 72;
							var v_189425 = ev_189406.target.value;
							F.line = 73;
							valueHEX3D_169839(n_189403, v_189425);
							if (!(!((action_189402 == null)))) {
							F.line = 74;
							failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(74, 10) `action != nil` "));
							}
							
							F.line = 75;
							action_189402(ev_189406, n_189403);
							if (!((value_169822(n_189403) == v_189425))) {
							F.line = 77;
							ev_189406.target.value = value_169822(n_189403);
							}
							
							}
							else {
								F.line = 89;
							action_189402(ev_189406, n_189403);
							}
							
						framePtr = F.prev;

						
					}

				var result_189401 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"karax.nim",line:0};
				framePtr = F;
					F.line = 84;
					var action_189402 = action_189397;
					F.line = 85;
					var n_189403 = n_189395;
					F.line = 86;
					result_189401 = HEX3Aanonymous_189404;
				framePtr = F.prev;

				return result_189401;

			}

	var result_189398 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 106;
		switch (k_189396) {
		case 30:
			F.line = 108;
			result_189398 = later_wrapper_189827();
			F.line = 109;
			d_189394.addEventListener("keyup", result_189398, false);
			break;
		case 29:
			F.line = 111;
			result_189398 = enter_wrapper_189657();
			F.line = 112;
			d_189394.addEventListener("keyup", result_189398, false);
			break;
		default: 
			F.line = 114;
			result_189398 = std_wrapper_189399();
			F.line = 115;
			d_189394.addEventListener(to_event_name_169695[chckIndx(k_189396, 0, to_event_name_169695.length+0-1)-0], result_189398, false);
			break;
		}
	framePtr = F.prev;

	return result_189398;

}

function apply_events_190086(n_190088) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 127;
		var dest_190089 = n_190088.dom;
		L1: do {
			F.line = 128;
			var i_190102 = 0;
			F.line = 2716;
			var colontmp__247906 = 0;
			F.line = 128;
			colontmp__247906 = (n_190088.events != null ? n_190088.events.length : 0);
			F.line = 2717;
			var i_247907 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_247907 < colontmp__247906)) break L3;
						F.line = 128;
						i_190102 = i_247907;
						F.line = 129;
						n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field2"] = wrap_event_189392(dest_190089, n_190088, n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field0"], n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field1"]);
						F.line = 2720;
						i_247907 = addInt(i_247907, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_58025(n_58027, s_58028) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
		F.line = 299;
		n_58027.style = {};
		L1: do {
			F.line = 300;
			var i_58221 = 0;
			F.line = 2653;
			var colontmp__247918 = 0;
			F.line = 300;
			colontmp__247918 = subInt(s_58028.length, 1);
			F.line = 2669;
			var res_247919 = 0;
			L2: do {
				F.line = 2670;
					L3: while (true) {
					if (!(res_247919 <= colontmp__247918)) break L3;
						F.line = 300;
						i_58221 = res_247919;
						F.line = 301;
						n_58027.style[s_58028[i_58221]] = s_58028[addInt(i_58221, 1)];
						F.line = 2672;
						res_247919 = addInt(res_247919, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function to_dom_190167(n_190169, use_attached_node_190170, kxi_190171) {
			var Tmp9;
			var Tmp10;

	var result_190172 = null;

	var F={procname:"karax.toDom",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (use_attached_node_190170) {
		if (!((n_190169.dom == null))) {
		F.line = 139;
		result_190172 = n_190169.dom;
		break BeforeRet;
		}
		
		}
		
		if ((n_190169.kind == 0)) {
		F.line = 141;
		result_190172 = document.createTextNode(n_190169.text);
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		}
		else {
		if ((n_190169.kind == 6)) {
		F.line = 144;
		result_190172 = document.createElement("div");
		F.line = 145;
		result_190172.innerHTML = n_190169.text;
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 147;
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 3)) {
		F.line = 149;
		var x_190243 = vcomponents_182026[0][n_190169.text](n_190169.kids);
		F.line = 150;
		result_190172 = to_dom_190167(x_190243, use_attached_node_190170, kxi_190171);
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 153;
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 4)) {
		F.line = 155;
		result_190172 = n_190169.dom;
		if (!(!((result_190172 == null)))) {
		F.line = 156;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(156, 12) `result != nil` "));
		}
		
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 159;
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 5)) {
		F.line = 161;
		var x_190422 = n_190169;
		if (!((x_190422.onAttachImpl == null))) {
		F.line = 162;
		x_190422.onAttachImpl(x_190422);
		}
		
		if (!(!((x_190422.renderImpl == null)))) {
		F.line = 163;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(163, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_190422.expanded == null)) {
		F.line = 165;
		x_190422.expanded = x_190422.renderImpl(x_190422);
		}
		
		if (!(!((x_190422.expanded == null)))) {
		F.line = 167;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(167, 12) `x.expanded != nil` "));
		}
		
		F.line = 168;
		result_190172 = to_dom_190167(x_190422.expanded, use_attached_node_190170, kxi_190171);
		F.line = 123;
		n_190169.dom = result_190172;
		if (!((n_190169.id == null))) {
		F.line = 124;
		kxi_189326[0].byId[n_190169.id] = n_190169;
		}
		
		F.line = 170;
		break BeforeRet;
		}
		else {
			F.line = 172;
			result_190172 = document.createElement(to_tag_169689[chckIndx(n_190169.kind, 0, to_tag_169689.length+0-1)-0]);
			F.line = 123;
			n_190169.dom = result_190172;
			if (!((n_190169.id == null))) {
			F.line = 124;
			kxi_189326[0].byId[n_190169.id] = n_190169;
			}
			
			L1: do {
				F.line = 174;
				var k_190831 = null;
				L2: do {
					F.line = 282;
					var i_247886 = 0;
					F.line = 2716;
					var colontmp__247887 = 0;
					F.line = 282;
					colontmp__247887 = (n_190169.kids != null ? n_190169.kids.length : 0);
					F.line = 2717;
					var i_247888 = 0;
					L3: do {
						F.line = 2718;
							L4: while (true) {
							if (!(i_247888 < colontmp__247887)) break L4;
								F.line = 282;
								i_247886 = i_247888;
								F.line = 174;
								k_190831 = n_190169.kids[chckIndx(i_247886, 0, n_190169.kids.length+0-1)-0];
								F.line = 175;
								result_190172.appendChild(to_dom_190167(k_190831, use_attached_node_190170, kxi_190171));
								F.line = 2720;
								i_247888 = addInt(i_247888, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_190169.text == null))) {
			F.line = 178;
			result_190172.value = n_190169.text;
			}
			
		}
		}}}}
		if (!((n_190169.id == null))) {
		F.line = 180;
		result_190172.id = n_190169.id;
		}
		
		if (!((n_190169.class == null))) {
		F.line = 182;
		result_190172.className = n_190169.class;
		}
		
		L5: do {
			F.line = 185;
			var k_190832 = null;
			F.line = 185;
			var v_190833 = null;
			L6: do {
				F.line = 285;
				var i_247899 = 0;
				F.line = 2653;
				var colontmp__247900 = 0;
				F.line = 285;
				colontmp__247900 = subInt((n_190169.attrs != null ? n_190169.attrs.length : 0), 2);
				F.line = 2669;
				var res_247901 = 0;
				L7: do {
					F.line = 2670;
						L8: while (true) {
						if (!(res_247901 <= colontmp__247900)) break L8;
							F.line = 285;
							i_247899 = res_247901;
							F.line = 185;
							k_190832 = n_190169.attrs[chckIndx(i_247899, 0, n_190169.attrs.length+0-1)-0];
							F.line = 286;
							v_190833 = n_190169.attrs[chckIndx(addInt(i_247899, 1), 0, n_190169.attrs.length+0-1)-0];
							if (!((v_190833 == null))) {
							F.line = 187;
							result_190172.setAttribute(k_190832, v_190833);
							}
							
							F.line = 2672;
							res_247901 = addInt(res_247901, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 188;
		apply_events_190086(n_190169);
			if (!!((kxi_190171 == null))) Tmp10 = false; else {				Tmp10 = (n_190169 == kxi_190171.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_190171.toFocus == null);			}		if (Tmp9) {
		F.line = 190;
		kxi_190171.toFocus = result_190172;
		}
		
		if (!((n_190169.style == null))) {
		F.line = 191;
		apply_style_58025(result_190172, n_190169.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_190172;

}

function replace_by_id_191012(id_191014, new_tree_191015) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 215;
		var x_191016 = document.getElementById(id_191014);
		F.line = 216;
		x_191016.parentNode.replaceChild(new_tree_191015, x_191016);
		F.line = 217;
		new_tree_191015.id = id_191014;
	framePtr = F.prev;

	
}

function len_170742(x_170744) {
	var result_170745 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 246;
		result_170745 = (x_170744.kids != null ? x_170744.kids.length : 0);
	framePtr = F.prev;

	return result_170745;

}

function HEX5BHEX5D_170764(x_170766, idx_170767) {
	var result_170768 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 247;
		result_170768 = x_170766.kids[chckIndx(idx_170767, 0, x_170766.kids.length+0-1)-0];
	framePtr = F.prev;

	return result_170768;

}

function same_190920(n_190922, e_190923, nesting_190924) {
			var Tmp1;
			var Tmp2;

	var result_190926 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_189326[0].orphans.hasOwnProperty(n_190922.id)) {
		F.line = 194;
		result_190926 = true;
		break BeforeRet;
		}
		
		if ((n_190922.kind == 5)) {
		F.line = 196;
		result_190926 = same_190920(n_190922.expanded, e_190923, addInt(nesting_190924, 1));
		}
		else {
		if ((n_190922.kind == 6)) {
		F.line = 198;
		result_190926 = true;
		}
		else {
			if ((n_190922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_190922.kind == 4);			}		if (Tmp1) {
		F.line = 201;
		result_190926 = true;
		}
		else {
		if ((to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0] == e_190923.nodeName)) {
		F.line = 203;
		result_190926 = true;
		if (!((n_190922.kind == 0))) {
			if (!!((e_190923.childNodes.length == len_170742(n_190922)))) Tmp2 = false; else {				Tmp2 = !((n_190922.kind == 111));			}		if (Tmp2) {
		F.line = 207;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_170742(n_190922))+""), makeNimstrLit(" real "), cstrToNimstr((e_190923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_190924)+""));
		F.line = 208;
		result_190926 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 209;
			var i_190994 = 0;
			F.line = 2716;
			var colontmp__247925 = 0;
			F.line = 209;
			colontmp__247925 = len_170742(n_190922);
			F.line = 2717;
			var i_247926 = 0;
			L4: do {
				F.line = 2718;
					L5: while (true) {
					if (!(i_247926 < colontmp__247925)) break L5;
						F.line = 209;
						i_190994 = i_247926;
						if (!(same_190920(HEX5BHEX5D_170764(n_190922, i_190994), e_190923.childNodes[i_190994], addInt(nesting_190924, 1)))) {
						F.line = 210;
						result_190926 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_247926 = addInt(i_247926, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 212;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_190923.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_190926;

}

function eq_56814(a_56816, b_56817) {
	var result_56818 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_56816 == null)) {
		if ((b_56817 == null)) {
		F.line = 229;
		result_56818 = true;
		break BeforeRet;
		}
		else {
			F.line = 230;
			result_56818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_56817 == null)) {
		F.line = 231;
		result_56818 = false;
		break BeforeRet;
		}
		}
		if (!((a_56816.length == b_56817.length))) {
		F.line = 232;
		result_56818 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 233;
			var i_56916 = 0;
			F.line = 2716;
			var colontmp__247968 = 0;
			F.line = 233;
			colontmp__247968 = a_56816.length;
			F.line = 2717;
			var i_247969 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_247969 < colontmp__247968)) break L3;
						F.line = 233;
						i_56916 = i_247969;
						if (!((a_56816[i_56916] == b_56817[i_56916]))) {
						F.line = 234;
						result_56818 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_247969 = addInt(i_247969, 1);
					}
			} while(false);
		} while(false);
		F.line = 235;
		result_56818 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_56818;

}

function same_attrs_172680(a_172682, b_172683) {
	var result_172684 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_172682.attrs != null ? a_172682.attrs.length : 0) == (b_172683.attrs != null ? b_172683.attrs.length : 0))) {
		F.line = 290;
		result_172684 = true;
		L1: do {
			F.line = 291;
			var i_172707 = 0;
			F.line = 2716;
			var colontmp__247973 = 0;
			F.line = 291;
			colontmp__247973 = (a_172682.attrs != null ? a_172682.attrs.length : 0);
			F.line = 2717;
			var i_247974 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_247974 < colontmp__247973)) break L3;
						F.line = 291;
						i_172707 = i_247974;
						if (!((a_172682.attrs[chckIndx(i_172707, 0, a_172682.attrs.length+0-1)-0] == b_172683.attrs[chckIndx(i_172707, 0, b_172683.attrs.length+0-1)-0]))) {
						F.line = 292;
						result_172684 = false;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_247974 = addInt(i_247974, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_172684;

}

function eq_191214(a_191216, b_191217, recursive_191218) {
			var Tmp4;
			var Tmp5;

	var result_191219 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_191216.kind == b_191217.kind))) {
		F.line = 239;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if (!((a_191216.id == b_191217.id))) {
		F.line = 242;
		result_191219 = 1;
		break BeforeRet;
		}
		
		F.line = 243;
		result_191219 = 3;
		if (!((a_191216.index == b_191217.index))) {
		F.line = 246;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if ((a_191216.kind == 0)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 250;
		result_191219 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_191216.kind == 3)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 252;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if (!((len_170742(a_191216) == len_170742(b_191217)))) {
		F.line = 253;
		result_191219 = 1;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 254;
			var i_192014 = 0;
			F.line = 2716;
			var colontmp__247958 = 0;
			F.line = 254;
			colontmp__247958 = len_170742(a_191216);
			F.line = 2717;
			var i_247959 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_247959 < colontmp__247958)) break L3;
						F.line = 254;
						i_192014 = i_247959;
						if ((eq_191214(HEX5BHEX5D_170764(a_191216, i_192014), HEX5BHEX5D_170764(b_191217, i_192014), recursive_191218) == 1)) {
						F.line = 255;
						result_191219 = 1;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_247959 = addInt(i_247959, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_191216.kind == 4)) {
		F.line = 257;
		result_191219 = 3;
		break BeforeRet;
		}
		else {
		if ((a_191216.kind == 6)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 260;
		result_191219 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_191217.kind == 5)) {
		if (!((a_191216.text == b_191217.text))) {
		F.line = 265;
		result_191219 = 1;
		break BeforeRet;
		}
		
		if (!((a_191216.key == b_191217.key))) {
		F.line = 271;
		result_191219 = 1;
		break BeforeRet;
		}
		
		F.line = 272;
		result_191219 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_191216.class == b_191217.class))) Tmp5 = true; else {				Tmp5 = !(eq_56814(a_191216.style, b_191217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_172680(a_191216, b_191217));			}		if (Tmp4) {
		F.line = 278;
		result_191219 = 2;
		break BeforeRet;
		}
		
		if (recursive_191218) {
		if (!((len_170742(a_191216) == len_170742(b_191217)))) {
		F.line = 282;
		result_191219 = 1;
		break BeforeRet;
		}
		
		L6: do {
			F.line = 283;
			var i_192608 = 0;
			F.line = 2716;
			var colontmp__247963 = 0;
			F.line = 283;
			colontmp__247963 = len_170742(a_191216);
			F.line = 2717;
			var i_247964 = 0;
			L7: do {
				F.line = 2718;
					L8: while (true) {
					if (!(i_247964 < colontmp__247963)) break L8;
						F.line = 283;
						i_192608 = i_247964;
						if (!((eq_191214(HEX5BHEX5D_170764(a_191216, i_192608), HEX5BHEX5D_170764(b_191217, i_192608), true) == 3))) {
						F.line = 285;
						result_191219 = 1;
						break BeforeRet;
						}
						
						F.line = 2720;
						i_247964 = addInt(i_247964, 1);
					}
			} while(false);
		} while(false);
		}
		
		F.line = 288;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_191219;

}

function update_styles_192642(new_node_192644, old_node_192645) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_192645.dom == null))) {
		if (!((new_node_192644.style == null))) {
		F.line = 293;
		apply_style_58025(old_node_192645.dom, new_node_192644.style);
		}
		else {
			F.line = 294;
			old_node_192645.dom.style = {m_type: NTI42283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 295;
		old_node_192645.dom.className = new_node_192644.class;
		}
		
		F.line = 296;
		old_node_192645.style = new_node_192644.style;
		F.line = 297;
		old_node_192645.class = new_node_192644.class;
	framePtr = F.prev;

	
}

function take_over_attr_170674(new_node_170676, old_node_170677) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 230;
		old_node_170677.attrs = new_node_170676.attrs;
	framePtr = F.prev;

	
}

function update_attributes_192690(new_node_192692, old_node_192693) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if (!((old_node_192693.dom == null))) {
		L1: do {
			F.line = 302;
			var k_192702 = null;
			F.line = 302;
			var __192703 = null;
			L2: do {
				F.line = 285;
				var i_247980 = 0;
				F.line = 2653;
				var colontmp__247981 = 0;
				F.line = 285;
				colontmp__247981 = subInt((old_node_192693.attrs != null ? old_node_192693.attrs.length : 0), 2);
				F.line = 2669;
				var res_247982 = 0;
				L3: do {
					F.line = 2670;
						L4: while (true) {
						if (!(res_247982 <= colontmp__247981)) break L4;
							F.line = 285;
							i_247980 = res_247982;
							F.line = 302;
							k_192702 = old_node_192693.attrs[chckIndx(i_247980, 0, old_node_192693.attrs.length+0-1)-0];
							F.line = 286;
							__192703 = old_node_192693.attrs[chckIndx(addInt(i_247980, 1), 0, old_node_192693.attrs.length+0-1)-0];
							F.line = 303;
							old_node_192693.dom.removeAttribute(k_192702);
							F.line = 2672;
							res_247982 = addInt(res_247982, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 304;
			var k_192704 = null;
			F.line = 304;
			var v_192705 = null;
			L6: do {
				F.line = 285;
				var i_247988 = 0;
				F.line = 2653;
				var colontmp__247989 = 0;
				F.line = 285;
				colontmp__247989 = subInt((new_node_192692.attrs != null ? new_node_192692.attrs.length : 0), 2);
				F.line = 2669;
				var res_247990 = 0;
				L7: do {
					F.line = 2670;
						L8: while (true) {
						if (!(res_247990 <= colontmp__247989)) break L8;
							F.line = 285;
							i_247988 = res_247990;
							F.line = 304;
							k_192704 = new_node_192692.attrs[chckIndx(i_247988, 0, new_node_192692.attrs.length+0-1)-0];
							F.line = 286;
							v_192705 = new_node_192692.attrs[chckIndx(addInt(i_247988, 1), 0, new_node_192692.attrs.length+0-1)-0];
							if (!((v_192705 == null))) {
							F.line = 306;
							old_node_192693.dom.setAttribute(k_192704, v_192705);
							}
							
							F.line = 2672;
							res_247990 = addInt(res_247990, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 307;
		take_over_attr_170674(new_node_192692, old_node_192693);
	framePtr = F.prev;

	
}

function add_patch_192814(kxi_192816, ka_192817, parenta_192818, currenta_192819, na_192820, old_node_192821) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 336;
		var l_192822 = kxi_192816.patchLen;
		if (((kxi_192816.patches != null ? kxi_192816.patches.length : 0) <= l_192822)) {
		F.line = 339;
		if (kxi_192816.patches != null) { kxi_192816.patches.push({k: ka_192817, parent: parenta_192818, current: currenta_192819, newNode: na_192820, oldNode: old_node_192821}); } else { kxi_192816.patches = [{k: ka_192817, parent: parenta_192818, current: currenta_192819, newNode: na_192820, oldNode: old_node_192821}]; };
		}
		else {
			F.line = 342;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].k = ka_192817;
			F.line = 343;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].parent = parenta_192818;
			F.line = 344;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].current = currenta_192819;
			F.line = 345;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].newNode = na_192820;
			F.line = 346;
			kxi_192816.patches[chckIndx(l_192822, 0, kxi_192816.patches.length+0-1)-0].oldNode = old_node_192821;
		}
		
		F.line = 347;
		kxi_192816.patchLen = addInt(kxi_192816.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_193245(new_node_193247, old_node_193248, parent_193249, current_193250, kxi_193251) {
						var Tmp5;

	var F={procname:"karax.diff",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 433;
		var result_193401 = eq_191214(new_node_193247, old_node_193248, false);
		F.line = 434;
		switch (result_193401) {
		case 0:
			F.line = 436;
			if (kxi_193251.components != null) { kxi_193251.components.push({oldNode: old_node_193248, newNode: new_node_193247, parent: parent_193249, current: current_193250}); } else { kxi_193251.components = [{oldNode: old_node_193248, newNode: new_node_193247, parent: parent_193249, current: current_193250}]; };
			break;
		case 3:
		case 2:
			F.line = 441;
			new_node_193247.dom = old_node_193248.dom;
			if ((result_193401 == 2)) {
			F.line = 443;
			update_styles_192642(new_node_193247, old_node_193248);
			F.line = 444;
			update_attributes_192690(new_node_193247, old_node_193248);
			if ((old_node_193248.kind == 0)) {
			F.line = 446;
			old_node_193248.text = new_node_193247.text;
			F.line = 447;
			old_node_193248.dom.nodeValue = new_node_193247.text;
			}
			
			}
			
			F.line = 452;
			var new_length_193420 = len_170742(new_node_193247);
			F.line = 453;
			var old_length_193421 = len_170742(old_node_193248);
			if (((new_length_193420 == 0) && (old_length_193421 == 0))) {
			F.line = 454;
			break BeforeRet;
			}
			
			F.line = 455;
			var min_length_193422 = nimMin(new_length_193420, old_length_193421);
			if (!((old_node_193248.kind == new_node_193247.kind))) {
			F.line = 457;
			failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(457, 12) `oldNode.kind == newNode.kind` "));
			}
			
			F.line = 458;
			var common_prefix_193602 = 0;
			L1: do {
				F.line = 461;
					L2: while (true) {
					if (!(common_prefix_193602 < min_length_193422)) break L2;
						if ((eq_191214(HEX5BHEX5D_170764(new_node_193247, common_prefix_193602), HEX5BHEX5D_170764(old_node_193248, common_prefix_193602), true) == 3)) {
						F.line = 463;
						add_patch_192814(kxi_193251, 5, null, null, HEX5BHEX5D_170764(new_node_193247, common_prefix_193602), HEX5BHEX5D_170764(old_node_193248, common_prefix_193602));
						F.line = 464;
						common_prefix_193602 = addInt(common_prefix_193602, 1);
						}
						else {
							F.line = 466;
							break L1;
						}
						
					}
			} while(false);
			F.line = 469;
			var old_pos_193614 = subInt(old_length_193421, 1);
			F.line = 470;
			var new_pos_193615 = subInt(new_length_193420, 1);
			L3: do {
				F.line = 471;
					L4: while (true) {
						if (!(common_prefix_193602 <= old_pos_193614)) Tmp5 = false; else {							Tmp5 = (common_prefix_193602 <= new_pos_193615);						}					if (!Tmp5) break L4;
						if ((eq_191214(HEX5BHEX5D_170764(new_node_193247, new_pos_193615), HEX5BHEX5D_170764(old_node_193248, old_pos_193614), true) == 3)) {
						F.line = 473;
						add_patch_192814(kxi_193251, 5, null, null, HEX5BHEX5D_170764(new_node_193247, new_pos_193615), HEX5BHEX5D_170764(old_node_193248, old_pos_193614));
						F.line = 474;
						old_pos_193614 = subInt(old_pos_193614, 1);
						F.line = 475;
						new_pos_193615 = subInt(new_pos_193615, 1);
						}
						else {
							F.line = 477;
							break L3;
						}
						
					}
			} while(false);
			F.line = 479;
			var pos_193633 = addInt(nimMin(old_pos_193614, new_pos_193615), 1);
			L6: do {
				F.line = 481;
				var i_193639 = 0;
				F.line = 2679;
				var colontmp__247933 = 0;
				F.line = 481;
				colontmp__247933 = subInt(pos_193633, 1);
				F.line = 2689;
				var res_247934 = common_prefix_193602;
				L7: do {
					F.line = 2690;
						L8: while (true) {
						if (!(res_247934 <= colontmp__247933)) break L8;
							F.line = 481;
							i_193639 = res_247934;
							F.line = 482;
							diff_193245(HEX5BHEX5D_170764(new_node_193247, i_193639), HEX5BHEX5D_170764(old_node_193248, i_193639), current_193250, current_193250.childNodes[chckIndx(i_193639, 0, current_193250.childNodes.length+0-1)-0], kxi_193251);
							F.line = 2692;
							res_247934 = addInt(res_247934, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_193614, 1) == old_length_193421)) {
			L9: do {
				F.line = 485;
				var i_193645 = 0;
				F.line = 2689;
				var res_247940 = pos_193633;
				L10: do {
					F.line = 2690;
						L11: while (true) {
						if (!(res_247940 <= new_pos_193615)) break L11;
							F.line = 485;
							i_193645 = res_247940;
							F.line = 486;
							add_patch_192814(kxi_193251, 2, current_193250, null, HEX5BHEX5D_170764(new_node_193247, i_193645), null);
							F.line = 2692;
							res_247940 = addInt(res_247940, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 488;
				var before_193646 = current_193250.childNodes[chckIndx(addInt(old_pos_193614, 1), 0, current_193250.childNodes.length+0-1)-0];
				L12: do {
					F.line = 489;
					var i_193652 = 0;
					F.line = 2689;
					var res_247946 = pos_193633;
					L13: do {
						F.line = 2690;
							L14: while (true) {
							if (!(res_247946 <= new_pos_193615)) break L14;
								F.line = 489;
								i_193652 = res_247946;
								F.line = 490;
								add_patch_192814(kxi_193251, 3, current_193250, before_193646, HEX5BHEX5D_170764(new_node_193247, i_193652), null);
								F.line = 2692;
								res_247946 = addInt(res_247946, 1);
							}
					} while(false);
				} while(false);
			}
			
			L15: do {
				F.line = 492;
				var i_193658 = 0;
				F.line = 2689;
				var res_247952 = pos_193633;
				L16: do {
					F.line = 2690;
						L17: while (true) {
						if (!(res_247952 <= old_pos_193614)) break L17;
							F.line = 492;
							i_193658 = res_247952;
							F.line = 493;
							add_patch_192814(kxi_189326[0], 4, null, null, null, HEX5BHEX5D_170764(old_node_193248, i_193658));
							F.line = 495;
							add_patch_192814(kxi_193251, 1, current_193250, current_193250.childNodes[chckIndx(i_193658, 0, current_193250.childNodes.length+0-1)-0], null, null);
							F.line = 2692;
							res_247952 = addInt(res_247952, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 497;
			add_patch_192814(kxi_189326[0], 4, null, null, null, old_node_193248);
			F.line = 498;
			add_patch_192814(kxi_193251, 0, parent_193249, current_193250, new_node_193247, null);
			break;
		case 4:
			if (true) {
			F.line = 499;
			failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(499, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	
}

function apply_components_194014(kxi_194016) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 507;
		var i_194018 = 0;
		L1: do {
			F.line = 510;
				L2: while (true) {
				if (!(i_194018 < (kxi_194016.components != null ? kxi_194016.components.length : 0))) break L2;
					F.line = 511;
					var x_194024 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].oldNode;
					F.line = 512;
					var new_node_194025 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].newNode;
						if (!!((x_194024.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_194024.changedImpl(x_194024, new_node_194025);						}					if (Tmp3) {
					F.line = 518;
					var current_194401 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].current;
					F.line = 519;
					var parent_194402 = kxi_194016.components[chckIndx(i_194018, 0, kxi_194016.components.length+0-1)-0].parent;
					F.line = 520;
					x_194024.updatedImpl(x_194024, new_node_194025);
					F.line = 521;
					var old_expanded_194403 = x_194024.expanded;
					F.line = 522;
					x_194024.expanded = x_194024.renderImpl(x_194024);
					F.line = 525;
					x_194024.renderedVersion = x_194024.version;
					if ((old_expanded_194403 == null)) {
					F.line = 527;
					add_patch_192814(kxi_189326[0], 4, null, null, null, x_194024);
					F.line = 528;
					add_patch_192814(kxi_194016, 0, parent_194402, current_194401, x_194024.expanded, null);
					}
					else {
						F.line = 532;
						diff_193245(x_194024.expanded, old_expanded_194403, parent_194402, current_194401, kxi_194016);
					}
					
					}
					
					F.line = 547;
					i_194018 = addInt(i_194018, 1);
				}
		} while(false);
		F.line = 548;
		if (kxi_194016.components === null) kxi_194016.components = [];
               if (kxi_194016.components.length < 0) { for (var i=kxi_194016.components.length;i<0;++i) kxi_194016.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_194016.components.length = 0; };
	framePtr = F.prev;

	
}

function move_dom_192907(dest_192909, src_192910) {
	var F={procname:"karax.moveDom",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 361;
		dest_192909.dom = src_192910.dom;
		F.line = 362;
		src_192910.dom = null;
		if (!((len_170742(dest_192909) == len_170742(src_192910)))) {
		F.line = 363;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(363, 10) `dest.len == src.len` "));
		}
		
		L1: do {
			F.line = 364;
			var i_193008 = 0;
			F.line = 2716;
			var colontmp__248007 = 0;
			F.line = 364;
			colontmp__248007 = len_170742(dest_192909);
			F.line = 2717;
			var i_248008 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_248008 < colontmp__248007)) break L3;
						F.line = 364;
						i_193008 = i_248008;
						F.line = 365;
						move_dom_192907(HEX5BHEX5D_170764(dest_192909, i_193008), HEX5BHEX5D_170764(src_192910, i_193008));
						F.line = 2720;
						i_248008 = addInt(i_248008, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_170782(x_170784, idx_170785, y_170786) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 248;
		x_170784.kids[chckIndx(idx_170785, 0, x_170784.kids.length+0-1)-0] = y_170786;
	framePtr = F.prev;

	
}

function apply_patch_193022(kxi_193024) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 368;
			var i_193032 = 0;
			F.line = 2716;
			var colontmp__247997 = 0;
			F.line = 368;
			colontmp__247997 = kxi_193024.patchLen;
			F.line = 2717;
			var i_247998 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_247998 < colontmp__247997)) break L3;
						F.line = 368;
						i_193032 = i_247998;
						F.line = 369;
						var p_193033 = nimCopy(null, kxi_193024.patches[chckIndx(i_193032, 0, kxi_193024.patches.length+0-1)-0], NTI189209);
						F.line = 370;
						switch (p_193033.k) {
						case 0:
							F.line = 372;
							var nn_193034 = to_dom_190167(p_193033.newNode, true, kxi_193024);
							if ((p_193033.parent == null)) {
							F.line = 374;
							replace_by_id_191012(kxi_193024.rootId, nn_193034);
							}
							else {
								F.line = 376;
							p_193033.parent.replaceChild(nn_193034, p_193033.current);
							}
							
							break;
						case 5:
							F.line = 378;
							move_dom_192907(p_193033.newNode, p_193033.oldNode);
							break;
						case 1:
							F.line = 380;
							p_193033.parent.removeChild(p_193033.current);
							break;
						case 2:
							F.line = 382;
							var nn_193043 = to_dom_190167(p_193033.newNode, true, kxi_193024);
							F.line = 383;
							p_193033.parent.appendChild(nn_193043);
							break;
						case 3:
							F.line = 385;
							var nn_193044 = to_dom_190167(p_193033.newNode, true, kxi_193024);
							F.line = 386;
							p_193033.parent.insertBefore(nn_193044, p_193033.current);
							break;
						case 4:
							F.line = 388;
							var n_193045 = p_193033.oldNode;
							if (!((n_193045.id == null))) {
							F.line = 389;
							delete kxi_193024.byId[n_193045.id];
							}
							
							if ((n_193045.kind == 5)) {
							F.line = 391;
							var x_193063 = n_193045;
							if (!((x_193063.onDetachImpl == null))) {
							F.line = 392;
							x_193063.onDetachImpl(x_193063);
							}
							
							}
							
							if (!(kxi_193024.surpressRedraws)) {
							F.line = 394;
							n_193045.dom = null;
							}
							
							break;
						}
						F.line = 2720;
						i_247998 = addInt(i_247998, 1);
					}
			} while(false);
		} while(false);
		F.line = 395;
		kxi_193024.patchLen = 0;
		L4: do {
			F.line = 396;
			var i_193076 = 0;
			F.line = 2716;
			var colontmp__248002 = 0;
			F.line = 396;
			colontmp__248002 = kxi_193024.patchLenV;
			F.line = 2717;
			var i_248003 = 0;
			L5: do {
				F.line = 2718;
					L6: while (true) {
					if (!(i_248003 < colontmp__248002)) break L6;
						F.line = 396;
						i_193076 = i_248003;
						F.line = 397;
						var p_193077 = nimCopy(null, kxi_193024.patchesV[chckIndx(i_193076, 0, kxi_193024.patchesV.length+0-1)-0], NTI189211);
						F.line = 398;
						HEX5BHEX5DHEX3D_170782(p_193077.parent, p_193077.pos, p_193077.newChild);
						if (!(!((p_193077.newChild.dom == null)))) {
						F.line = 399;
						failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(399, 12) `p.newChild.dom != nil` "));
						}
						
						F.line = 2720;
						i_248003 = addInt(i_248003, 1);
					}
			} while(false);
		} while(false);
		F.line = 400;
		kxi_193024.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_196046(kxi_196048) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_196048.renderer == null)) {
		F.line = 596;
		break BeforeRet;
		}
		
		F.line = 597;
		var rdata_196053 = {hashPart: window.location.hash};
		F.line = 598;
		var newtree_196054 = kxi_196048.renderer(rdata_196053);
		F.line = 599;
		kxi_196048.runCount = addInt(kxi_196048.runCount, 1);
		F.line = 600;
		newtree_196054.id = kxi_196048.rootId;
		F.line = 601;
		kxi_196048.toFocus = null;
		if ((kxi_196048.currentTree == null)) {
		F.line = 603;
		var asdom_196069 = to_dom_190167(newtree_196054, true, kxi_196048);
		F.line = 604;
		replace_by_id_191012(kxi_196048.rootId, asdom_196069);
		}
		else {
			if (!(same_190920(kxi_196048.currentTree, document.getElementById(kxi_196048.rootId), 0))) {
			F.line = 606;
			failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(606, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			F.line = 607;
			var olddom_196201 = document.getElementById(kxi_196048.rootId);
			F.line = 608;
			diff_193245(newtree_196054, kxi_196048.currentTree, null, olddom_196201, kxi_196048);
		}
		
		F.line = 612;
		apply_components_194014(kxi_196048);
		F.line = 617;
		apply_patch_193022(kxi_196048);
		F.line = 618;
		kxi_196048.currentTree = newtree_196054;
		if (!(same_190920(kxi_196048.currentTree, document.getElementById(kxi_196048.rootId), 0))) {
		F.line = 619;
		failed_assert_impl_15051(makeNimstrLit("/home/glasso/.nimble/pkgs/karax-1.1.0/karax/karax.nim(619, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_196048.postRenderCallback == null))) {
		F.line = 622;
		kxi_196048.postRenderCallback(rdata_196053);
		}
		
		if (!((kxi_196048.toFocus == null))) {
		F.line = 626;
		kxi_196048.toFocus.focus();
		}
		
		F.line = 627;
		kxi_196048.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function init_197446(ev_197448) {

		function HEX3Aanonymous_197449() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 652;
				dodraw_196046(kxi_189326[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 652;
		kxi_189326[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_197449);
	framePtr = F.prev;

	
}

function redraw_197214(kxi_197216) {

		function HEX3Aanonymous_197401() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 645;
				dodraw_196046(kxi_197216);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((kxi_197216.renderId == 0)) {
		F.line = 645;
		kxi_197216.renderId = window.requestAnimationFrame(HEX3Aanonymous_197401);
		}
		
	framePtr = F.prev;

	
}

function set_renderer_197478(renderer_197483, root_197484, client_post_render_callback_197488) {

		function HEX3Aanonymous_197710() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 675;
				redraw_197214(kxi_189326[0]);
			framePtr = F.prev;

			
		}

	var result_197489 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_197484) == null)) {
		F.line = 661;
		var msg_197495 = (("Could not find a <div> with id=" + root_197484) + ". Karax needs it as its rendering target.");
		F.line = 3436;
		var e_197498 = null;
		F.line = 3439;
		e_197498 = {m_type: NTI4026, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 663;
		e_197498.message = nimCopy(null, cstrToNimstr(msg_197495), NTI138);
		F.line = 3432;
		e_197498.parent = null;
		F.line = 663;
		raiseException(e_197498, "Exception");
		}
		
		F.line = 665;
		result_197489 = {rootId: root_197484, renderer: renderer_197483, postRenderCallback: client_post_render_callback_197488, patches: new_seq_197612(60), patchesV: new_seq_197649(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 673;
		kxi_189326[0] = result_197489;
		F.line = 674;
		window.onload = init_197446;
		F.line = 675;
		window.onhashchange = HEX3Aanonymous_197710;
	framePtr = F.prev;

	return result_197489;

}

function set_renderer_197783(renderer_197787, root_197788, client_post_render_callback_197791) {

		function wrap_renderer_197793(data_197795) {
			var result_197796 = null;

			var F={procname:"setRenderer.wrapRenderer",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 680;
				result_197796 = renderer_197787();
			framePtr = F.prev;

			return result_197796;

		}

		function wrap_post_render_197810(data_197812) {
			var F={procname:"setRenderer.wrapPostRender",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				if (!((client_post_render_callback_197791 == null))) {
				F.line = 682;
				client_post_render_callback_197791();
				}
				
			framePtr = F.prev;

			
		}

	var result_197792 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 679;
		result_197792 = set_renderer_197478(wrap_renderer_197793, root_197788, wrap_post_render_197810);
	framePtr = F.prev;

	return result_197792;

}

function new_vnode_172228(kind_172230) {
	var result_172231 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		result_172231 = {kind: kind_172230, index: -1, m_type: NTI169714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_172231;

}

function add_170800(parent_170802, kid_170803) {
	var F={procname:"vdom.add",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 253;
		if (parent_170802.kids != null) { parent_170802.kids.push(kid_170803); } else { parent_170802.kids = [kid_170803]; };
	framePtr = F.prev;

	
}

function tree_172246(kind_172248, kids_172250) {
	var result_172251 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_172251 = new_vnode_172228(kind_172248);
		L1: do {
			F.line = 263;
			var k_172282 = null;
			F.line = 3;
			var i_248035 = 0;
			L2: do {
				F.line = 4;
					L3: while (true) {
					if (!(i_248035 < (kids_172250 != null ? kids_172250.length : 0))) break L3;
						F.line = 263;
						k_172282 = kids_172250[chckIndx(i_248035, 0, kids_172250.length+0-1)-0];
						F.line = 263;
						add_170800(result_172251, k_172282);
						F.line = 6;
						i_248035 = addInt(i_248035, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_172251;

}

function set_attr_170568(n_170570, key_170571, val_170572) {
	var F={procname:"vdom.setAttr",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((n_170570.attrs != null ? n_170570.attrs.length : 0) == 0)) {
		F.line = 216;
		n_170570.attrs = nimCopy(null, [key_170571, val_170572], NTI170587);
		}
		else {
			L1: do {
				F.line = 218;
				var i_170600 = 0;
				F.line = 2653;
				var colontmp__248039 = 0;
				F.line = 218;
				colontmp__248039 = subInt((n_170570.attrs != null ? n_170570.attrs.length : 0), 2);
				F.line = 2669;
				var res_248040 = 0;
				L2: do {
					F.line = 2670;
						L3: while (true) {
						if (!(res_248040 <= colontmp__248039)) break L3;
							F.line = 218;
							i_170600 = res_248040;
							if ((n_170570.attrs[chckIndx(i_170600, 0, n_170570.attrs.length+0-1)-0] == key_170571)) {
							F.line = 220;
							n_170570.attrs[chckIndx(addInt(i_170600, 1), 0, n_170570.attrs.length+0-1)-0] = val_170572;
							F.line = 221;
							break BeforeRet;
							}
							
							F.line = 2672;
							res_248040 = addInt(res_248040, 2);
						}
				} while(false);
			} while(false);
			F.line = 222;
			if (n_170570.attrs != null) { n_170570.attrs.push(key_170571); } else { n_170570.attrs = [key_170571]; };
			F.line = 223;
			if (n_170570.attrs != null) { n_170570.attrs.push(val_170572); } else { n_170570.attrs = [val_170572]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function text_172364(s_172366) {
	var result_172367 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 271;
		result_172367 = {kind: 0, text: toJSStr(s_172366), index: -1, m_type: NTI169714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_172367;

}

function add_event_listener_172721(n_172723, event_172724, handler_172725) {
	var F={procname:"vdom.addEventListener",prev:framePtr,filename:"vdom.nim",line:0};
	framePtr = F;
		F.line = 295;
		if (n_172723.events != null) { n_172723.events.push({Field0: event_172724, Field1: handler_172725, Field2: null}); } else { n_172723.events = [{Field0: event_172724, Field1: handler_172725, Field2: null}]; };
	framePtr = F.prev;

	
}

function add_event_handler_197928(n_197930, k_197931, action_197932, kxi_197933) {

		function wrapper_197934(ev_197936, n_197937) {
			var F={procname:"addEventHandler.wrapper",prev:framePtr,filename:"karax.nim",line:0};
			framePtr = F;
				F.line = 708;
				action_197932(ev_197936, n_197937);
				if (!(kxi_197933.surpressRedraws)) {
				F.line = 709;
				redraw_197214(kxi_197933);
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"karax.addEventHandler",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 710;
		add_event_listener_172721(n_197930, k_197931, wrapper_197934);
	framePtr = F.prev;

	
}

function parse_saturated_natural_62631(s_62633, b_62635, b_62635_Idx, start_62636) {
			var Tmp1;
					var Tmp4;

	var result_62638 = 0;

	var F={procname:"parseutils.parseSaturatedNatural",prev:framePtr,filename:"parseutils.nim",line:0};
	framePtr = F;
		F.line = 480;
		var i_62639 = start_62636;
		if (((i_62639 < (s_62633 != null ? s_62633.length : 0)) && (s_62633[chckIndx(i_62639, 0, s_62633.length+0-1)-0] == 43))) {
		F.line = 481;
		i_62639 = addInt(i_62639, 1);
		}
		
			if (!(i_62639 < (s_62633 != null ? s_62633.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet34[s_62633[chckIndx(i_62639, 0, s_62633.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 483;
		b_62635[b_62635_Idx] = 0;
		L2: do {
			F.line = 484;
				L3: while (true) {
					if (!(i_62639 < (s_62633 != null ? s_62633.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet35[s_62633[chckIndx(i_62639, 0, s_62633.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					F.line = 485;
					var c_62668 = subInt(s_62633[chckIndx(i_62639, 0, s_62633.length+0-1)-0], 48);
					if ((b_62635[b_62635_Idx] <= divInt(subInt(2147483647, c_62668), 10))) {
					F.line = 487;
					b_62635[b_62635_Idx] = addInt(mulInt(b_62635[b_62635_Idx], 10), c_62668);
					}
					else {
						F.line = 489;
						b_62635[b_62635_Idx] = 2147483647;
					}
					
					F.line = 490;
					i_62639 = addInt(i_62639, 1);
					L5: do {
						F.line = 491;
							L6: while (true) {
							if (!((i_62639 < (s_62633 != null ? s_62633.length : 0)) && (s_62633[chckIndx(i_62639, 0, s_62633.length+0-1)-0] == 95))) break L6;
								F.line = 491;
								i_62639 = addInt(i_62639, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 492;
		result_62638 = subInt(i_62639, start_62636);
		}
		
	framePtr = F.prev;

	return result_62638;

}

function HEX5BHEX5D_111704(s_111708, x_111710) {
	var result_111711 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 3936;
		var a_111801 = x_111710.a;
		F.line = 3937;
		var l_112001 = addInt(subInt(subInt((s_111708 != null ? s_111708.length : 0), x_111710.b), a_111801), 1);
		F.line = 3938;
		result_111711 = nimCopy(null, mnewString(chckRange(l_112001, 0, 2147483647)), NTI138);
		L1: do {
			F.line = 3939;
			var i_112009 = 0;
			F.line = 2717;
			var i_248057 = 0;
			L2: do {
				F.line = 2718;
					L3: while (true) {
					if (!(i_248057 < l_112001)) break L3;
						F.line = 3939;
						i_112009 = i_248057;
						F.line = 3939;
						result_111711[chckIndx(i_112009, 0, result_111711.length+0-1)-0] = s_111708[chckIndx(addInt(i_112009, a_111801), 0, s_111708.length+0-1)-0];
						F.line = 2720;
						i_248057 = addInt(i_248057, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_111711;

}

function HEX2EHEX2E_111639(a_111643, b_111644) {
	var result_111650 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"system.nim",line:0};
	framePtr = F;
		F.line = 500;
		nimCopy(result_111650, {a: a_111643, b: b_111644}, NTI111647);
	framePtr = F.prev;

	return result_111650;

}

function parse_standard_format_specifier_237324(s_237326, start_237327, ignore_unknown_suffix_237329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_237330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

	var F={procname:"strformat.parseStandardFormatSpecifier",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 377;
		result_237330.fill = 32;
		F.line = 378;
		result_237330.align = 0;
		F.line = 379;
		result_237330.sign = 45;
		F.line = 380;
		var i_237333 = start_237327;
		if (((addInt(i_237333, 1) < (s_237326 != null ? s_237326.length : 0)) && (ConstSet30[s_237326[chckIndx(addInt(i_237333, 1), 0, s_237326.length+0-1)-0]] != undefined))) {
		F.line = 382;
		result_237330.fill = s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0];
		F.line = 383;
		result_237330.align = s_237326[chckIndx(addInt(i_237333, 1), 0, s_237326.length+0-1)-0];
		F.line = 384;
		i_237333 = addInt(i_237333, 2);
		}
		else {
		if (((i_237333 < (s_237326 != null ? s_237326.length : 0)) && (ConstSet31[s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0]] != undefined))) {
		F.line = 386;
		result_237330.align = s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0];
		F.line = 387;
		i_237333 = addInt(i_237333, 1);
		}
		}
		if (((i_237333 < (s_237326 != null ? s_237326.length : 0)) && (ConstSet32[s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0]] != undefined))) {
		F.line = 390;
		result_237330.sign = s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0];
		F.line = 391;
		i_237333 = addInt(i_237333, 1);
		}
		
		if (((i_237333 < (s_237326 != null ? s_237326.length : 0)) && (s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0] == 35))) {
		F.line = 394;
		result_237330.alternateForm = true;
		F.line = 395;
		i_237333 = addInt(i_237333, 1);
		}
		
			if (!((addInt(i_237333, 1) < (s_237326 != null ? s_237326.length : 0)) && (s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet33[s_237326[chckIndx(addInt(i_237333, 1), 0, s_237326.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		F.line = 398;
		result_237330.padWithZero = true;
		F.line = 399;
		i_237333 = addInt(i_237333, 1);
		}
		
		F.line = 401;
		var parsed_length_237391 = parse_saturated_natural_62631(s_237326, result_237330, "minimumWidth", i_237333);
		F.line = 402;
		i_237333 = addInt(i_237333, parsed_length_237391);
		if (((i_237333 < (s_237326 != null ? s_237326.length : 0)) && (s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0] == 46))) {
		F.line = 404;
		i_237333 = addInt(i_237333, 1);
		F.line = 405;
		var parsed_length_b_237405 = parse_saturated_natural_62631(s_237326, result_237330, "precision", i_237333);
		F.line = 406;
		i_237333 = addInt(i_237333, parsed_length_b_237405);
		}
		else {
			F.line = 408;
			result_237330.precision = -1;
		}
		
			if (!(i_237333 < (s_237326 != null ? s_237326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet36[s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0]] != undefined);			}		if (Tmp2) {
		F.line = 411;
		result_237330.typ = s_237326[chckIndx(i_237333, 0, s_237326.length+0-1)-0];
		F.line = 412;
		i_237333 = addInt(i_237333, 1);
		}
		
		F.line = 413;
		result_237330.endPosition = i_237333;
			if (!!((i_237333 == (s_237326 != null ? s_237326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_237329);			}		if (Tmp3) {
		F.line = 3436;
		var e_237460 = null;
		F.line = 3439;
		e_237460 = {m_type: NTI4052, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 416;
		e_237460.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_111704(s_237326, HEX2EHEX2E_111639(i_237333, 1)) || []), NTI138);
		F.line = 3432;
		e_237460.parent = null;
		F.line = 415;
		raiseException(e_237460, "ValueError");
		}
		
	framePtr = F.prev;

	return result_237330;

}

function nucruneLen(s_76227) {
	var result_76228 = 0;

	var F={procname:"unicode.runeLen",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
		F.line = 49;
		var i_76230 = 0;
		L1: do {
			F.line = 50;
				L2: while (true) {
				if (!(i_76230 < (s_76227 != null ? s_76227.length : 0))) break L2;
					if ((s_76227[chckIndx(i_76230, 0, s_76227.length+0-1)-0] <= 127)) {
					F.line = 51;
					i_76230 = addInt(i_76230, 1);
					}
					else {
					if ((((s_76227[chckIndx(i_76230, 0, s_76227.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					F.line = 52;
					i_76230 = addInt(i_76230, 2);
					}
					else {
					if ((((s_76227[chckIndx(i_76230, 0, s_76227.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					F.line = 53;
					i_76230 = addInt(i_76230, 3);
					}
					else {
					if ((((s_76227[chckIndx(i_76230, 0, s_76227.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					F.line = 54;
					i_76230 = addInt(i_76230, 4);
					}
					else {
					if ((((s_76227[chckIndx(i_76230, 0, s_76227.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					F.line = 55;
					i_76230 = addInt(i_76230, 5);
					}
					else {
					if ((((s_76227[chckIndx(i_76230, 0, s_76227.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					F.line = 56;
					i_76230 = addInt(i_76230, 6);
					}
					else {
						F.line = 57;
					i_76230 = addInt(i_76230, 1);
					}
					}}}}}
					F.line = 58;
					result_76228 = addInt(result_76228, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_76228;

}

function rune_len_at_76359(s_76361, i_76362) {
	var result_76363 = 0;

	var F={procname:"unicode.runeLenAt",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
		if ((s_76361[chckIndx(i_76362, 0, s_76361.length+0-1)-0] <= 127)) {
		F.line = 70;
		result_76363 = 1;
		}
		else {
		if ((((s_76361[chckIndx(i_76362, 0, s_76361.length+0-1)-0] >>> 0) >>> 5) == 6)) {
		F.line = 71;
		result_76363 = 2;
		}
		else {
		if ((((s_76361[chckIndx(i_76362, 0, s_76361.length+0-1)-0] >>> 0) >>> 4) == 14)) {
		F.line = 72;
		result_76363 = 3;
		}
		else {
		if ((((s_76361[chckIndx(i_76362, 0, s_76361.length+0-1)-0] >>> 0) >>> 3) == 30)) {
		F.line = 73;
		result_76363 = 4;
		}
		else {
		if ((((s_76361[chckIndx(i_76362, 0, s_76361.length+0-1)-0] >>> 0) >>> 2) == 62)) {
		F.line = 74;
		result_76363 = 5;
		}
		else {
		if ((((s_76361[chckIndx(i_76362, 0, s_76361.length+0-1)-0] >>> 0) >>> 1) == 126)) {
		F.line = 75;
		result_76363 = 6;
		}
		else {
			F.line = 76;
			result_76363 = 1;
		}
		}}}}}
	framePtr = F.prev;

	return result_76363;

}

function rune_offset_82044(s_82046, pos_82047, start_82048) {
	var result_82049 = 0;

	var F={procname:"unicode.runeOffset",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 327;
		var i_82051 = 0;
		F.line = 328;
		var o_82052 = start_82048;
		L1: do {
			F.line = 329;
				L2: while (true) {
				if (!(i_82051 < pos_82047)) break L2;
					F.line = 330;
					o_82052 = addInt(o_82052, chckRange(rune_len_at_76359(s_82046, o_82052), 0, 2147483647));
					if (((s_82046 != null ? s_82046.length : 0) <= o_82052)) {
					F.line = 332;
					result_82049 = -1;
					break BeforeRet;
					}
					
					F.line = 333;
					i_82051 = addInt(i_82051, 1);
				}
		} while(false);
		F.line = 334;
		result_82049 = o_82052;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_82049;

}

function validate_utf8_79229(s_79231) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_79232 = 0;

	var F={procname:"unicode.validateUtf8",prev:framePtr,filename:"unicode.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 180;
		var i_79234 = 0;
		F.line = 181;
		var l_79235 = (s_79231 != null ? s_79231.length : 0);
		L1: do {
			F.line = 182;
				L2: while (true) {
				if (!(i_79234 < l_79235)) break L2;
					if ((s_79231[chckIndx(i_79234, 0, s_79231.length+0-1)-0] <= 127)) {
					F.line = 184;
					i_79234 = addInt(i_79234, 1);
					}
					else {
					if ((((s_79231[chckIndx(i_79234, 0, s_79231.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_79231[chckIndx(i_79234, 0, s_79231.length+0-1)-0] < 194)) {
					F.line = 186;
					result_79232 = i_79234;
					break BeforeRet;
					}
					
						if (!(addInt(i_79234, 1) < l_79235)) Tmp3 = false; else {							Tmp3 = (((s_79231[chckIndx(addInt(i_79234, 1), 0, s_79231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					F.line = 187;
					i_79234 = addInt(i_79234, 2);
					}
					else {
						F.line = 188;
						result_79232 = i_79234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_79231[chckIndx(i_79234, 0, s_79231.length+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_79234, 2) < l_79235)) Tmp5 = false; else {							Tmp5 = (((s_79231[chckIndx(addInt(i_79234, 1), 0, s_79231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_79231[chckIndx(addInt(i_79234, 2), 0, s_79231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					F.line = 191;
					i_79234 = addInt(i_79234, 3);
					}
					else {
						F.line = 192;
						result_79232 = i_79234;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_79231[chckIndx(i_79234, 0, s_79231.length+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_79234, 3) < l_79235)) Tmp8 = false; else {							Tmp8 = (((s_79231[chckIndx(addInt(i_79234, 1), 0, s_79231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_79231[chckIndx(addInt(i_79234, 2), 0, s_79231.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_79231[chckIndx(addInt(i_79234, 3), 0, s_79231.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					F.line = 197;
					i_79234 = addInt(i_79234, 4);
					}
					else {
						F.line = 198;
						result_79232 = i_79234;
						break BeforeRet;
					}
					
					}
					else {
						F.line = 200;
						result_79232 = i_79234;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		F.line = 201;
		result_79232 = -1;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79232;

}

function nsuRepeatChar(c_162855, count_162856) {
	var result_162857 = null;

	var F={procname:"strutils.repeat",prev:framePtr,filename:"strutils.nim",line:0};
	framePtr = F;
		F.line = 1290;
		result_162857 = nimCopy(null, mnewString(count_162856), NTI138);
		L1: do {
			F.line = 1291;
			var i_162866 = 0;
			F.line = 2679;
			var colontmp__248089 = 0;
			F.line = 1291;
			colontmp__248089 = subInt(count_162856, 1);
			F.line = 2689;
			var res_248090 = 0;
			L2: do {
				F.line = 2690;
					L3: while (true) {
					if (!(res_248090 <= colontmp__248089)) break L3;
						F.line = 1291;
						i_162866 = res_248090;
						F.line = 1291;
						result_162857[chckIndx(i_162866, 0, result_162857.length+0-1)-0] = c_162855;
						F.line = 2692;
						res_248090 = addInt(res_248090, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_162857;

}

function align_string_237223(s_237225, minimum_width_237226, align_237227, fill_237228) {
			var Tmp1;

	var result_237229 = null;

	var F={procname:"strformat.alignString",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		if ((minimum_width_237226 == 0)) {
		F.line = 281;
		result_237229 = nimCopy(null, s_237225, NTI138);
		}
		else {
			F.line = 283;
			if ((validate_utf8_79229(s_237225) == -1)) {
			Tmp1 = nucruneLen(s_237225);
			}
			else {
			Tmp1 = (s_237225 != null ? s_237225.length : 0);
			}
			
			var s_rune_len_237231 = Tmp1;
			F.line = 284;
			var to_fill_237232 = subInt(minimum_width_237226, s_rune_len_237231);
			if ((to_fill_237232 <= 0)) {
			F.line = 286;
			result_237229 = nimCopy(null, s_237225, NTI138);
			}
			else {
			if (((align_237227 == 60) || (align_237227 == 0))) {
			F.line = 288;
			result_237229 = nimCopy(null, (s_237225 || []).concat(nsuRepeatChar(fill_237228, chckRange(to_fill_237232, 0, 2147483647)) || []), NTI138);
			}
			else {
			if ((align_237227 == 94)) {
			F.line = 290;
			var half_237233 = divInt(to_fill_237232, 2);
			F.line = 291;
			result_237229 = nimCopy(null, (nsuRepeatChar(fill_237228, chckRange(half_237233, 0, 2147483647)) || []).concat(s_237225 || [],nsuRepeatChar(fill_237228, chckRange(subInt(to_fill_237232, half_237233), 0, 2147483647)) || []), NTI138);
			}
			else {
				F.line = 293;
				result_237229 = nimCopy(null, (nsuRepeatChar(fill_237228, chckRange(to_fill_237232, 0, 2147483647)) || []).concat(s_237225 || []), NTI138);
			}
			}}
		}
		
	framePtr = F.prev;

	return result_237229;

}

function format_value_237687(result_237690, result_237690_Idx, value_237691, specifier_237692) {
	var F={procname:"strformat.formatValue",prev:framePtr,filename:"strformat.nim",line:0};
	framePtr = F;
		F.line = 499;
		var spec_237693 = parse_standard_format_specifier_237324(specifier_237692, 0, false);
		F.line = 500;
		var value_237694 = nimCopy(null, value_237691, NTI138);
		F.line = 501;
		switch (spec_237693.typ) {
		case 115:
		case 0:
			break;
		default: 
			F.line = 3436;
			var e_237697 = null;
			F.line = 3439;
			e_237697 = {m_type: NTI4052, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			F.line = 505;
			e_237697.message = nimCopy(null, (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_237693.typ]), NTI138);
			F.line = 3432;
			e_237697.parent = null;
			F.line = 504;
			raiseException(e_237697, "ValueError");
			break;
		}
		if (!((spec_237693.precision == -1))) {
		if ((spec_237693.precision < nucruneLen(value_237694))) {
		F.line = 509;
		(value_237694 == null ? value_237694 = mnewString(chckRange(rune_offset_82044(value_237694, chckRange(spec_237693.precision, 0, 2147483647), 0), 0, 2147483647)) : value_237694.length = chckRange(rune_offset_82044(value_237694, chckRange(spec_237693.precision, 0, 2147483647), 0), 0, 2147483647));
		}
		
		}
		
		F.line = 510;
		if (result_237690[result_237690_Idx] != null) { result_237690[result_237690_Idx] = (result_237690[result_237690_Idx]).concat(align_string_237223(value_237694, spec_237693.minimumWidth, spec_237693.align, spec_237693.fill)); } else { result_237690[result_237690_Idx] = align_string_237223(value_237694, spec_237693.minimumWidth, spec_237693.align, spec_237693.fill).slice(); };
	framePtr = F.prev;

	
}

function youtube_url_246969(id_246971) {
	var result_246972 = null;

	var F={procname:"taiko.youtubeUrl",prev:framePtr,filename:"taiko.nim",line:0};
	framePtr = F;
		F.line = 33;
		F.line = 33;
		var fmt_res_246976 = [mnewString(0)];
		F.line = 33;
		if (fmt_res_246976[0] != null) { fmt_res_246976[0] = (fmt_res_246976[0]).concat(makeNimstrLit("https://www.youtube.com/watch?v=")); } else { fmt_res_246976[0] = makeNimstrLit("https://www.youtube.com/watch?v="); };
		F.line = 33;
		format_value_237687(fmt_res_246976, 0, id_246971, []);
		result_246972 = nimCopy(null, fmt_res_246976[0], NTI138);
	framePtr = F.prev;

	return result_246972;

}

function youtube_thumbnail_246996(id_246998) {
	var result_246999 = null;

	var F={procname:"taiko.youtubeThumbnail",prev:framePtr,filename:"taiko.nim",line:0};
	framePtr = F;
		F.line = 36;
		F.line = 36;
		var fmt_res_247000 = [mnewString(0)];
		F.line = 36;
		if (fmt_res_247000[0] != null) { fmt_res_247000[0] = (fmt_res_247000[0]).concat(makeNimstrLit("https://img.youtube.com/vi/")); } else { fmt_res_247000[0] = makeNimstrLit("https://img.youtube.com/vi/"); };
		F.line = 36;
		format_value_237687(fmt_res_247000, 0, id_246998, []);
		F.line = 36;
		if (fmt_res_247000[0] != null) { fmt_res_247000[0] = (fmt_res_247000[0]).concat(makeNimstrLit("/default.jpg")); } else { fmt_res_247000[0] = makeNimstrLit("/default.jpg"); };
		result_246999 = nimCopy(null, fmt_res_247000[0], NTI138);
	framePtr = F.prev;

	return result_246999;

}

function create_dom_247567() {

		function HEX3Aanonymous_247645(ev_247647, node_247648) {
			var F={procname:"createDom.:anonymous",prev:framePtr,filename:"taiko.nim",line:0};
			framePtr = F;
				F.line = 70;
				list_247472[0] = nimCopy(null, filter_video_list_247381(data_246829.videos, cstrToNimstr(value_169822(node_247648))), NTI247386);
			framePtr = F.prev;

			
		}

	var result_247569 = null;

	var F={procname:"taiko.createDom",prev:framePtr,filename:"taiko.nim",line:0};
	framePtr = F;
		F.line = 63;
		F.line = 63;
		var tmp_247607 = tree_172246(43, []);
		F.line = 64;
		var tmp_247608 = tree_172246(43, []);
		F.line = 64;
		tmp_247608.class = "header";
		F.line = 65;
		var tmp_247614 = tree_172246(75, []);
		F.line = 65;
		set_attr_170568(tmp_247614, "src", "resources/logo.png");
		F.line = 65;
		add_170800(tmp_247608, tmp_247614);
		F.line = 66;
		var tmp_247615 = tree_172246(43, []);
		F.line = 66;
		tmp_247615.class = "search";
		F.line = 67;
		add_170800(tmp_247615, text_172364(makeNimstrLit("Pesquisar:")));
		F.line = 68;
		var tmp_247616 = tree_172246(105, []);
		F.line = 68;
		tmp_247616.class = "searchBar";
		F.line = 69;
		add_event_handler_197928(tmp_247616, 25, HEX3Aanonymous_247645, kxi_189326[0]);
		F.line = 69;
		add_170800(tmp_247615, tmp_247616);
		F.line = 69;
		add_170800(tmp_247608, tmp_247615);
		F.line = 69;
		add_170800(tmp_247607, tmp_247608);
		L1: do {
			F.line = 71;
			var item_247814 = {id: null, title: null, tags: null};
			F.line = 185;
			var i_248030 = 0;
			F.line = 186;
			var l_248031 = (list_247472[0] != null ? list_247472[0].length : 0);
			L2: do {
				F.line = 187;
					L3: while (true) {
					if (!(i_248030 < l_248031)) break L3;
						F.line = 71;
						nimCopy(item_247814, list_247472[0][chckIndx(i_248030, 0, list_247472[0].length+0-1)-0], NTI245015);
						F.line = 72;
						var tmp_247617 = tree_172246(43, []);
						F.line = 72;
						tmp_247617.class = "item";
						F.line = 73;
						var tmp_247618 = tree_172246(44, []);
						F.line = 73;
						set_attr_170568(tmp_247618, "href", toJSStr(youtube_url_246969(item_247814.id)));
						F.line = 73;
						set_attr_170568(tmp_247618, "target", "_blank");
						F.line = 74;
						var tmp_247619 = tree_172246(75, []);
						F.line = 74;
						set_attr_170568(tmp_247619, "src", toJSStr(youtube_thumbnail_246996(item_247814.id)));
						F.line = 74;
						add_170800(tmp_247618, tmp_247619);
						F.line = 74;
						add_170800(tmp_247617, tmp_247618);
						F.line = 75;
						var tmp_247620 = tree_172246(43, []);
						F.line = 76;
						var tmp_247621 = tree_172246(44, []);
						F.line = 76;
						set_attr_170568(tmp_247621, "href", toJSStr(youtube_url_246969(item_247814.id)));
						F.line = 76;
						set_attr_170568(tmp_247621, "target", "_blank");
						F.line = 77;
						add_170800(tmp_247621, text_172364(item_247814.title));
						F.line = 77;
						add_170800(tmp_247620, tmp_247621);
						F.line = 78;
						var tmp_247622 = tree_172246(71, []);
						F.line = 78;
						add_170800(tmp_247620, tmp_247622);
						L4: do {
							F.line = 79;
							var tag_247845 = null;
							F.line = 183;
							var colontmp__248025 = null;
							F.line = 79;
							colontmp__248025 = item_247814.tags;
							F.line = 185;
							var i_248026 = 0;
							F.line = 186;
							var l_248027 = (colontmp__248025 != null ? colontmp__248025.length : 0);
							L5: do {
								F.line = 187;
									L6: while (true) {
									if (!(i_248026 < l_248027)) break L6;
										F.line = 79;
										tag_247845 = colontmp__248025[chckIndx(i_248026, 0, colontmp__248025.length+0-1)-0];
										F.line = 80;
										var tmp_247623 = tree_172246(43, []);
										F.line = 80;
										tmp_247623.class = "tag";
										F.line = 81;
										add_170800(tmp_247623, text_172364(tag_247845));
										F.line = 81;
										add_170800(tmp_247620, tmp_247623);
										F.line = 189;
										i_248026 = addInt(i_248026, 1);
										if (!(((colontmp__248025 != null ? colontmp__248025.length : 0) == l_248027))) {
										F.line = 190;
										failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 81;
						add_170800(tmp_247617, tmp_247620);
						F.line = 81;
						add_170800(tmp_247607, tmp_247617);
						F.line = 189;
						i_248030 = addInt(i_248030, 1);
						if (!(((list_247472[0] != null ? list_247472[0].length : 0) == l_248031))) {
						F.line = 190;
						failed_assert_impl_15051(makeNimstrLit("/home/glasso/.choosenim/toolchains/nim-0.20.2/lib/system/iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		result_247569 = tmp_247607;
	framePtr = F.prev;

	return result_247569;

}
set_renderer_197783(create_dom_247567, "ROOT", null);
